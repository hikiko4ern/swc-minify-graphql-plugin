query RandomQuery($Query__codeOfConduct__key: String!, $Query__enterprise__slug: String!, $Organization__ipAllowListEntries__first: Int, $Organization__auditLog__first: Int, $Organization__enterpriseOwners__first: Int, $Organization__membersWithRole__first: Int, $Organization__projectsV2__first: Int, $ProjectV2__view__number: Int!, $ProjectV2__fields__first: Int, $ProjectV2__views__first: Int, $ProjectV2__workflow__number: Int!, $Organization__projectV2__number: Int!, $Organization__repositories__first: Int, $Repository__pinnedIssues__first: Int, $Repository__commitComments__first: Int, $Repository__dependencyGraphManifests__first: Int, $Repository__deployKeys__first: Int, $Repository__deployments__first: Int, $Repository__discussion__number: Int!, $Repository__discussionCategories__first: Int, $Repository__discussionCategory__slug: String!, $Repository__environment__name: String!, $Issue__comments__first: Int, $Issue__linkedBranches__first: Int, $Issue__participants__first: Int, $Issue__projectCards__first: Int, $Issue__projectsV2__first: Int, $Issue__reactions__first: Int, $Issue__timelineItems__first: Int, $Issue__trackedInIssues__first: Int, $Issue__trackedIssues__first: Int, $Issue__userContentEdits__first: Int, $Repository__issue__number: Int!, $Repository__label__name: String!, $Repository__languages__first: Int, $Repository__mentionableUsers__first: Int, $Repository__packages__first: Int, $Repository__projects__first: Int, $Repository__projectsV2__first: Int, $Repository__pullRequest__number: Int!, $ReactionGroup__users__first: Int, $Release__releaseAssets__first: Int, $Repository__release__tagName: String!, $Repository__repositoryTopics__first: Int, $RepositoryRuleset__bypassActors__first: Int, $RepositoryRuleset__rules__first: Int, $Repository__ruleset__databaseId: Int!, $Repository__submodules__first: Int, $Repository__discussions__first: Int, $Repository__forks__first: Int, $Repository__issues__first: Int, $Repository__labels__first: Int, $Repository__milestone__number: Int!, $Repository__pinnedDiscussions__first: Int, $Repository__pinnedEnvironments__first: Int, $Repository__project__number: Int!, $Repository__projectV2__number: Int!, $Repository__ref__qualifiedName: String!, $Repository__refs__first: Int, $Repository__refs__refPrefix: String!, $Repository__rulesets__first: Int, $Repository__stargazers__first: Int, $Repository__vulnerabilityAlerts__first: Int, $Repository__vulnerabilityAlert__number: Int!, $Repository__watchers__first: Int, $Organization__repository__name: String!, $Organization__repositoryDiscussionComments__first: Int, $Organization__repositoryMigrations__first: Int, $OrganizationIdentityProvider__externalIdentities__first: Int, $Organization__sponsors__first: Int, $Organization__sponsorshipsAsMaintainer__first: Int, $Organization__isSponsoredBy__accountLogin: String!, $Enterprise__organizations__first: Int, $User__isSponsoredBy__accountLogin: String!, $User__organizationVerifiedDomainEmails__login: String!, $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login: String!, $Query__enterpriseAdministratorInvitationByToken__invitationToken: String!, $Query__enterpriseMemberInvitationByToken__invitationToken: String!, $Query__marketplaceCategory__slug: String!, $Query__marketplaceListing__slug: String!, $Query__marketplaceListings__first: Int, $Query__search__first: Int, $Query__search__query: String!, $Query__search__type: SearchType!, $Query__securityAdvisory__ghsaId: String!, $Topic__relatedTopics__first: Int, $Topic__repositories__first: Int, $Topic__stargazers__first: Int, $Query__topic__name: String!, $Query__user__login: String!) {
  rateLimit {
    limit
    nodeCount
    remaining
    resetAt
    used
  }
  codeOfConduct(key: $Query__codeOfConduct__key) {
    body
    id
    resourcePath
    url
  }
  enterprise(slug: $Query__enterprise__slug) {
    announcement
    announcementExpiresAt
    announcementUserDismissible
    billingEmail
    createdAt
    databaseId
    description
    descriptionHTML
    id
    location
    readmeHTML
    slug
    url
    websiteUrl
  }
  enterpriseAdministratorInvitationByToken(invitationToken: $Query__enterpriseAdministratorInvitationByToken__invitationToken) {
    enterprise {
      billingInfo {
        bandwidthQuota
        bandwidthUsage
        bandwidthUsagePercentage
        storageQuota
        storageUsage
        storageUsagePercentage
        totalAvailableLicenses
      }
      organizations(first: $Enterprise__organizations__first) {
        edges {
          node {
            ipAllowListEntries(first: $Organization__ipAllowListEntries__first) {
              totalCount
            }
            auditLog(first: $Organization__auditLog__first) {
              pageInfo {
                endCursor
                hasPreviousPage
                startCursor
              }
            }
            enterpriseOwners(first: $Organization__enterpriseOwners__first) {
              pageInfo {
                endCursor
                hasPreviousPage
                startCursor
              }
            }
            membersWithRole(first: $Organization__membersWithRole__first) {
              totalCount
            }
            projectsV2(first: $Organization__projectsV2__first) {
              pageInfo {
                hasNextPage
                hasPreviousPage
              }
            }
            projectV2(number: $Organization__projectV2__number) {
              view(number: $ProjectV2__view__number) {
                filter
                fullDatabaseId
                layout
                name
                number
              }
              fields(first: $ProjectV2__fields__first) {
                totalCount
              }
              views(first: $ProjectV2__views__first) {
                nodes {
                  databaseId
                  id
                  number
                }
              }
              workflow(number: $ProjectV2__workflow__number) {
                id
                name
                number
                updatedAt
              }
              closedAt
              createdAt
              fullDatabaseId
              number
              public
              readme
              resourcePath
              shortDescription
              viewerCanReopen
              viewerCanUpdate
            }
            repositories(first: $Organization__repositories__first) {
              edges {
                node {
                  allowUpdateBranch
                  archivedAt
                  autoMergeAllowed
                  deleteBranchOnMerge
                  description
                  descriptionHTML
                  forkCount
                  forkingAllowed
                  hasIssuesEnabled
                  hasProjectsEnabled
                  hasSponsorshipsEnabled
                  hasWikiEnabled
                  homepageUrl
                  isBlankIssuesEnabled
                  isDisabled
                  isFork
                  isTemplate
                  isUserConfigurationRepository
                  mergeCommitAllowed
                  mergeCommitTitle
                  openGraphImageUrl
                  projectsResourcePath
                  projectsUrl
                  rebaseMergeAllowed
                  shortDescriptionHTML
                  squashMergeAllowed
                  tempCloneToken
                  updatedAt
                  url
                  usesCustomOpenGraphImage
                  viewerCanAdminister
                  viewerCanSubscribe
                  viewerCanUpdateTopics
                  viewerHasStarred
                  viewerPossibleCommitEmails
                  viewerSubscription
                }
                cursor
              }
              nodes {
                archivedAt
                deleteBranchOnMerge
                forkCount
                hasIssuesEnabled
                hasSponsorshipsEnabled
                hasWikiEnabled
                id
                isDisabled
                isMirror
                isPrivate
                isUserConfigurationRepository
                lockReason
                mergeCommitMessage
                mergeCommitTitle
                nameWithOwner
                openGraphImageUrl
                pushedAt
                resourcePath
                securityPolicyUrl
                shortDescriptionHTML
                squashMergeAllowed
                squashMergeCommitTitle
                squashPrTitleUsedAsDefault
                sshUrl
                usesCustomOpenGraphImage
                viewerCanCreateProjects
                viewerDefaultCommitEmail
                viewerDefaultMergeMethod
                viewerPermission
                viewerSubscription
                webCommitSignoffRequired
              }
              totalCount
            }
            repository(name: $Organization__repository__name) {
              pinnedIssues(first: $Repository__pinnedIssues__first) {
                pageInfo {
                  hasPreviousPage
                }
              }
              commitComments(first: $Repository__commitComments__first) {
                edges {
                  node {
                    authorAssociation
                    bodyHTML
                    bodyText
                    createdAt
                    createdViaEmail
                    includesCreatedEdit
                    isMinimized
                    publishedAt
                    updatedAt
                    viewerCanDelete
                    viewerCanMinimize
                    viewerCanReact
                    viewerCanUpdate
                    viewerDidAuthor
                  }
                }
              }
              contributingGuidelines {
                resourcePath
              }
              dependencyGraphManifests(first: $Repository__dependencyGraphManifests__first) {
                totalCount
              }
              deployKeys(first: $Repository__deployKeys__first) {
                nodes {
                  createdAt
                  id
                  key
                  verified
                }
                pageInfo {
                  endCursor
                  hasPreviousPage
                }
                totalCount
              }
              deployments(first: $Repository__deployments__first) {
                totalCount
              }
              discussion(number: $Repository__discussion__number) {
                authorAssociation
                body
                bodyHTML
                createdViaEmail
                includesCreatedEdit
                lastEditedAt
                resourcePath
                stateReason
                updatedAt
                upvoteCount
                viewerCanDelete
                viewerCanReopen
                viewerCanSubscribe
                viewerCanUpdate
                viewerCanUpvote
                viewerDidAuthor
                viewerSubscription
              }
              discussionCategories(first: $Repository__discussionCategories__first) {
                nodes {
                  repository {
                    archivedAt
                    createdAt
                    description
                    diskUsage
                    forkCount
                    hasProjectsEnabled
                    hasSponsorshipsEnabled
                    hasWikiEnabled
                    id
                    isBlankIssuesEnabled
                    isFork
                    isLocked
                    isSecurityPolicyEnabled
                    lockReason
                    mergeCommitAllowed
                    mergeCommitMessage
                    mergeCommitTitle
                    nameWithOwner
                    openGraphImageUrl
                    projectsResourcePath
                    projectsUrl
                    sshUrl
                    stargazerCount
                    tempCloneToken
                    updatedAt
                    usesCustomOpenGraphImage
                    viewerCanCreateProjects
                    viewerCanSubscribe
                    viewerCanUpdateTopics
                    viewerDefaultCommitEmail
                    viewerDefaultMergeMethod
                    viewerPossibleCommitEmails
                    viewerSubscription
                    visibility
                    webCommitSignoffRequired
                  }
                  description
                  updatedAt
                }
              }
              discussionCategory(slug: $Repository__discussionCategory__slug) {
                id
                name
                slug
                updatedAt
              }
              environment(name: $Repository__environment__name) {
                databaseId
                isPinned
                name
              }
              fundingLinks {
                platform
              }
              issue(number: $Repository__issue__number) {
                comments(first: $Issue__comments__first) {
                  pageInfo {
                    endCursor
                    hasNextPage
                    hasPreviousPage
                  }
                  nodes {
                    authorAssociation
                    body
                    isMinimized
                    publishedAt
                    resourcePath
                    updatedAt
                    viewerCanMinimize
                    viewerCannotUpdateReasons
                    viewerCanReact
                  }
                  totalCount
                }
                linkedBranches(first: $Issue__linkedBranches__first) {
                  totalCount
                }
                milestone {
                  closed
                  closedAt
                  createdAt
                  dueOn
                  number
                  resourcePath
                  title
                  url
                  viewerCanReopen
                }
                participants(first: $Issue__participants__first) {
                  edges {
                    cursor
                  }
                }
                projectCards(first: $Issue__projectCards__first) {
                  totalCount
                }
                projectsV2(first: $Issue__projectsV2__first) {
                  nodes {
                    closed
                    databaseId
                    id
                    number
                    public
                    shortDescription
                    title
                    updatedAt
                    url
                    viewerCanReopen
                  }
                  edges {
                    cursor
                  }
                  pageInfo {
                    hasNextPage
                  }
                  totalCount
                }
                reactionGroups {
                  createdAt
                  viewerHasReacted
                }
                reactions(first: $Issue__reactions__first) {
                  viewerHasReacted
                }
                timelineItems(first: $Issue__timelineItems__first) {
                  totalCount
                  updatedAt
                }
                trackedInIssues(first: $Issue__trackedInIssues__first) {
                  pageInfo {
                    endCursor
                    hasNextPage
                    startCursor
                  }
                  edges {
                    cursor
                  }
                }
                trackedIssues(first: $Issue__trackedIssues__first) {
                  totalCount
                }
                userContentEdits(first: $Issue__userContentEdits__first) {
                  pageInfo {
                    endCursor
                    hasPreviousPage
                    startCursor
                  }
                  nodes {
                    createdAt
                    deletedAt
                    diff
                    id
                  }
                  totalCount
                }
                activeLockReason
                bodyResourcePath
                bodyUrl
                closed
                createdViaEmail
                fullDatabaseId
                id
                isReadByViewer
                locked
                resourcePath
                state
                title
                titleHTML
                trackedIssuesCount
                viewerCanLabel
                viewerCanSubscribe
                viewerCanUpdate
                viewerSubscription
                viewerThreadSubscriptionFormAction
              }
              label(name: $Repository__label__name) {
                description
                id
                url
              }
              languages(first: $Repository__languages__first) {
                edges {
                  cursor
                  size
                }
                totalSize
              }
              mentionableUsers(first: $Repository__mentionableUsers__first) {
                totalCount
              }
              mergeQueue {
                nextEntryEstimatedTimeToMerge
              }
              packages(first: $Repository__packages__first) {
                pageInfo {
                  endCursor
                  hasNextPage
                  hasPreviousPage
                  startCursor
                }
              }
              parent {
                archivedAt
                autoMergeAllowed
                description
                diskUsage
                forkCount
                forkingAllowed
                hasIssuesEnabled
                hasSponsorshipsEnabled
                hasVulnerabilityAlertsEnabled
                hasWikiEnabled
                isArchived
                isDisabled
                isEmpty
                isInOrganization
                isLocked
                isPrivate
                isTemplate
                isUserConfigurationRepository
                lockReason
                mergeCommitAllowed
                mergeCommitMessage
                mergeCommitTitle
                projectsResourcePath
                rebaseMergeAllowed
                securityPolicyUrl
                shortDescriptionHTML
                squashMergeCommitMessage
                squashMergeCommitTitle
                sshUrl
                stargazerCount
                tempCloneToken
                url
                viewerCanAdminister
                viewerDefaultCommitEmail
                viewerHasStarred
                viewerPermission
                viewerSubscription
                webCommitSignoffRequired
              }
              planFeatures {
                maximumAssignees
                maximumManualReviewRequests
              }
              primaryLanguage {
                id
              }
              projects(first: $Repository__projects__first) {
                pageInfo {
                  endCursor
                  hasNextPage
                  hasPreviousPage
                }
                edges {
                  node {
                    body
                    closed
                    databaseId
                    id
                    name
                    state
                    updatedAt
                  }
                }
              }
              projectsV2(first: $Repository__projectsV2__first) {
                pageInfo {
                  endCursor
                  hasNextPage
                  hasPreviousPage
                }
              }
              pullRequest(number: $Repository__pullRequest__number) {
                baseRefName
                bodyHTML
                bodyText
                canBeRebased
                changedFiles
                checksUrl
                closed
                databaseId
                deletions
                headRefOid
                includesCreatedEdit
                isCrossRepository
                isDraft
                isInMergeQueue
                isReadByViewer
                lastEditedAt
                mergedAt
                mergeStateStatus
                number
                publishedAt
                resourcePath
                revertResourcePath
                revertUrl
                reviewDecision
                updatedAt
                viewerCanApplySuggestion
                viewerCanDeleteHeadRef
                viewerCanEditFiles
                viewerCanReact
                viewerCanReopen
                viewerMergeBodyText
                viewerMergeHeadlineText
                viewerSubscription
              }
              pullRequestTemplates {
                filename
              }
              release(tagName: $Repository__release__tagName) {
                tag {
                  name
                }
                reactionGroups {
                  users(first: $ReactionGroup__users__first) {
                    totalCount
                  }
                  content
                  viewerHasReacted
                }
                releaseAssets(first: $Release__releaseAssets__first) {
                  totalCount
                }
                repository {
                  autoMergeAllowed
                  databaseId
                  description
                  diskUsage
                  forkCount
                  hasIssuesEnabled
                  hasProjectsEnabled
                  id
                  isEmpty
                  isFork
                  isMirror
                  isSecurityPolicyEnabled
                  isTemplate
                  mergeCommitAllowed
                  mergeCommitMessage
                  mirrorUrl
                  nameWithOwner
                  openGraphImageUrl
                  projectsUrl
                  pushedAt
                  rebaseMergeAllowed
                  securityPolicyUrl
                  squashMergeAllowed
                  squashMergeCommitTitle
                  squashPrTitleUsedAsDefault
                  sshUrl
                  stargazerCount
                  url
                  usesCustomOpenGraphImage
                  viewerHasStarred
                  viewerSubscription
                  visibility
                }
                createdAt
                id
                isPrerelease
                publishedAt
                shortDescriptionHTML
                tagName
                updatedAt
                url
                viewerCanReact
              }
              repositoryTopics(first: $Repository__repositoryTopics__first) {
                totalCount
              }
              ruleset(databaseId: $Repository__ruleset__databaseId) {
                bypassActors(first: $RepositoryRuleset__bypassActors__first) {
                  edges {
                    cursor
                  }
                }
                conditions {
                  repositoryId {
                    repositoryIds
                  }
                  refName {
                    exclude
                  }
                }
                rules(first: $RepositoryRuleset__rules__first) {
                  totalCount
                }
                createdAt
                databaseId
              }
              submodules(first: $Repository__submodules__first) {
                edges {
                  node {
                    branch
                    name
                    path
                    pathRaw
                  }
                  cursor
                }
                nodes {
                  name
                  nameRaw
                  subprojectCommitOid
                }
              }
              vulnerabilityAlert(number: $Repository__vulnerabilityAlert__number) {
                repository {
                  primaryLanguage {
                    color
                    id
                    name
                  }
                  commitComments(first: $Repository__commitComments__first) {
                    totalCount
                  }
                  defaultBranchRef {
                    prefix
                  }
                  deployKeys(first: $Repository__deployKeys__first) {
                    totalCount
                  }
                  deployments(first: $Repository__deployments__first) {
                    totalCount
                  }
                  discussionCategories(first: $Repository__discussionCategories__first) {
                    totalCount
                  }
                  discussions(first: $Repository__discussions__first) {
                    totalCount
                  }
                  environment(name: $Repository__environment__name) {
                    id
                    pinnedPosition
                  }
                  forks(first: $Repository__forks__first) {
                    totalDiskUsage
                  }
                  fundingLinks {
                    platform
                  }
                  issues(first: $Repository__issues__first) {
                    totalCount
                  }
                  issueTemplates {
                    about
                    filename
                    title
                  }
                  label(name: $Repository__label__name) {
                    color
                    resourcePath
                    url
                  }
                  labels(first: $Repository__labels__first) {
                    totalCount
                  }
                  languages(first: $Repository__languages__first) {
                    totalCount
                  }
                  latestRelease {
                    createdAt
                    databaseId
                    description
                    descriptionHTML
                    id
                    isLatest
                    isPrerelease
                    publishedAt
                    shortDescriptionHTML
                    tagName
                    url
                    viewerCanReact
                  }
                  milestone(number: $Repository__milestone__number) {
                    closedAt
                    createdAt
                    description
                    state
                  }
                  pinnedDiscussions(first: $Repository__pinnedDiscussions__first) {
                    totalCount
                  }
                  pinnedEnvironments(first: $Repository__pinnedEnvironments__first) {
                    totalCount
                  }
                  pinnedIssues(first: $Repository__pinnedIssues__first) {
                    totalCount
                  }
                  project(number: $Repository__project__number) {
                    bodyHTML
                    createdAt
                    resourcePath
                    viewerCanClose
                    viewerCanReopen
                    viewerCanUpdate
                  }
                  projectV2(number: $Repository__projectV2__number) {
                    databaseId
                    fullDatabaseId
                    id
                    readme
                    resourcePath
                    shortDescription
                    template
                    title
                    url
                    viewerCanReopen
                  }
                  ref(qualifiedName: $Repository__ref__qualifiedName) {
                    id
                  }
                  refs(first: $Repository__refs__first, refPrefix: $Repository__refs__refPrefix) {
                    totalCount
                  }
                  repositoryTopics(first: $Repository__repositoryTopics__first) {
                    totalCount
                  }
                  rulesets(first: $Repository__rulesets__first) {
                    totalCount
                  }
                  stargazers(first: $Repository__stargazers__first) {
                    totalCount
                  }
                  submodules(first: $Repository__submodules__first) {
                    totalCount
                  }
                  vulnerabilityAlerts(first: $Repository__vulnerabilityAlerts__first) {
                    totalCount
                  }
                  autoMergeAllowed
                  databaseId
                  deleteBranchOnMerge
                  descriptionHTML
                  diskUsage
                  forkCount
                  forkingAllowed
                  hasDiscussionsEnabled
                  hasIssuesEnabled
                  hasWikiEnabled
                  isArchived
                  isBlankIssuesEnabled
                  isDisabled
                  isSecurityPolicyEnabled
                  isTemplate
                  mergeCommitAllowed
                  mergeCommitTitle
                  mirrorUrl
                  nameWithOwner
                  projectsResourcePath
                  rebaseMergeAllowed
                  resourcePath
                  securityPolicyUrl
                  shortDescriptionHTML
                  squashMergeCommitMessage
                  squashMergeCommitTitle
                  sshUrl
                  usesCustomOpenGraphImage
                  viewerCanAdminister
                  viewerCanUpdateTopics
                  viewerDefaultMergeMethod
                  viewerHasStarred
                  viewerPermission
                  visibility
                  webCommitSignoffRequired
                }
                dependabotUpdate {
                  repository {
                    archivedAt
                    createdAt
                    diskUsage
                    hasDiscussionsEnabled
                    hasIssuesEnabled
                    hasWikiEnabled
                    homepageUrl
                    id
                    isBlankIssuesEnabled
                    isDisabled
                    isEmpty
                    isInOrganization
                    isMirror
                    isTemplate
                    lockReason
                    mergeCommitAllowed
                    mergeCommitTitle
                    mirrorUrl
                    name
                    nameWithOwner
                    pushedAt
                    rebaseMergeAllowed
                    resourcePath
                    securityPolicyUrl
                    squashMergeCommitMessage
                    sshUrl
                    stargazerCount
                    tempCloneToken
                    viewerCanCreateProjects
                    viewerCanSubscribe
                    viewerCanUpdateTopics
                    viewerDefaultMergeMethod
                    viewerHasStarred
                    viewerSubscription
                    visibility
                    webCommitSignoffRequired
                  }
                  error {
                    body
                    errorType
                    title
                  }
                  pullRequest {
                    activeLockReason
                    baseRefName
                    baseRefOid
                    canBeRebased
                    changedFiles
                    checksResourcePath
                    createdViaEmail
                    databaseId
                    deletions
                    fullDatabaseId
                    headRefName
                    headRefOid
                    includesCreatedEdit
                    isMergeQueueEnabled
                    isReadByViewer
                    locked
                    mergeable
                    merged
                    mergedAt
                    number
                    publishedAt
                    revertUrl
                    reviewDecision
                    state
                    titleHTML
                    totalCommentsCount
                    updatedAt
                    viewerCanApplySuggestion
                    viewerCanClose
                    viewerCanDeleteHeadRef
                    viewerCanDisableAutoMerge
                    viewerCanEditFiles
                    viewerCanLabel
                    viewerCanMergeAsAdmin
                    viewerCanSubscribe
                    viewerCanUpdateBranch
                    viewerMergeBodyText
                    viewerMergeHeadlineText
                  }
                }
                autoDismissedAt
                dependencyScope
                dismissComment
                fixedAt
                id
                state
                vulnerableManifestFilename
              }
              watchers(first: $Repository__watchers__first) {
                pageInfo {
                  endCursor
                }
              }
              allowUpdateBranch
              archivedAt
              autoMergeAllowed
              createdAt
              databaseId
              diskUsage
              forkCount
              hasDiscussionsEnabled
              hasProjectsEnabled
              hasSponsorshipsEnabled
              hasVulnerabilityAlertsEnabled
              hasWikiEnabled
              homepageUrl
              id
              isBlankIssuesEnabled
              isDisabled
              isEmpty
              isLocked
              isPrivate
              isSecurityPolicyEnabled
              isTemplate
              isUserConfigurationRepository
              lockReason
              mergeCommitAllowed
              mergeCommitMessage
              mergeCommitTitle
              mirrorUrl
              name
              nameWithOwner
              pushedAt
              resourcePath
              squashMergeCommitMessage
              squashMergeCommitTitle
              squashPrTitleUsedAsDefault
              stargazerCount
              tempCloneToken
              url
              viewerCanCreateProjects
              viewerCanUpdateTopics
              viewerDefaultCommitEmail
              viewerDefaultMergeMethod
              viewerHasStarred
              viewerPossibleCommitEmails
              viewerSubscription
              visibility
              webCommitSignoffRequired
            }
            repositoryDiscussionComments(first: $Organization__repositoryDiscussionComments__first) {
              pageInfo {
                endCursor
                hasPreviousPage
              }
            }
            repositoryMigrations(first: $Organization__repositoryMigrations__first) {
              totalCount
            }
            samlIdentityProvider {
              externalIdentities(first: $OrganizationIdentityProvider__externalIdentities__first) {
                totalCount
              }
              id
              idpCertificate
              issuer
            }
            sponsors(first: $Organization__sponsors__first) {
              edges {
                cursor
              }
            }
            sponsorshipsAsMaintainer(first: $Organization__sponsorshipsAsMaintainer__first) {
              pageInfo {
                endCursor
                hasNextPage
                startCursor
              }
              edges {
                node {
                  tierSelectedAt
                }
                cursor
              }
              nodes {
                isActive
                isSponsorOptedIntoEmail
                paymentSource
                tierSelectedAt
              }
              totalRecurringMonthlyPriceInCents
            }
            sponsorsListing {
              billingCountryOrRegion
              fullDescriptionHTML
              isPublic
              shortDescription
              slug
              url
            }
            announcement
            announcementCreatedAt
            announcementExpiresAt
            announcementUserDismissible
            archivedAt
            createdAt
            estimatedNextSponsorsPayoutInCents
            hasSponsorsListing
            id
            isSponsoredBy(accountLogin: $Organization__isSponsoredBy__accountLogin)
            isSponsoringViewer
            isVerified
            membersCanForkPrivateRepositories
            monthlyEstimatedSponsorsIncomeInCents
            name
            newTeamResourcePath
            newTeamUrl
            notificationDeliveryRestrictionEnabledSetting
            resourcePath
            totalSponsorshipAmountAsSponsorInCents
            twitterUsername
            updatedAt
            url
            viewerCanAdminister
            viewerCanCreateProjects
            viewerCanSponsor
            viewerIsAMember
            viewerIsFollowing
            viewerIsSponsoring
            webCommitSignoffRequired
          }
        }
      }
      ownerInfo {
        affiliatedUsersWithTwoFactorDisabledExist
        allowPrivateRepositoryForkingSetting
        allowPrivateRepositoryForkingSettingPolicyValue
        defaultRepositoryPermissionSetting
        ipAllowListForInstalledAppsEnabledSetting
        membersCanCreateInternalRepositoriesSetting
        membersCanMakePurchasesSetting
        notificationDeliveryRestrictionEnabledSetting
        organizationProjectsSetting
        repositoryProjectsSetting
        twoFactorDisallowedMethodsSetting
      }
      announcementExpiresAt
      createdAt
      databaseId
      id
      location
      name
      readme
      resourcePath
      viewerIsAdmin
      websiteUrl
    }
    invitee {
      bio
      bioHTML
      company
      companyHTML
      createdAt
      email
      estimatedNextSponsorsPayoutInCents
      isCampusExpert
      isDeveloperProgramMember
      isEmployee
      isHireable
      isSiteAdmin
      isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
      isSponsoringViewer
      isViewer
      location
      monthlyEstimatedSponsorsIncomeInCents
      name
      organizationVerifiedDomainEmails(login: $User__organizationVerifiedDomainEmails__login)
      projectsUrl
      resourcePath
      twitterUsername
      updatedAt
      url
      userViewType
      viewerCanChangePinnedItems
      viewerCanCreateProjects
      viewerCanFollow
      viewerCanSponsor
      viewerIsFollowing
      viewerIsSponsoring
    }
    inviter {
      anyPinnableItems
      avatarUrl
      bio
      bioHTML
      canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
      companyHTML
      createdAt
      databaseId
      isCampusExpert
      isDeveloperProgramMember
      isSiteAdmin
      isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
      location
      login
      monthlyEstimatedSponsorsIncomeInCents
      name
      organizationVerifiedDomainEmails(login: $User__organizationVerifiedDomainEmails__login)
      projectsResourcePath
      projectsUrl
      resourcePath
      totalSponsorshipAmountAsSponsorInCents
      twitterUsername
      viewerCanSponsor
    }
    createdAt
    role
  }
  enterpriseMemberInvitationByToken(invitationToken: $Query__enterpriseMemberInvitationByToken__invitationToken) {
    enterprise {
      announcement
      announcementCreatedAt
      announcementExpiresAt
      avatarUrl
      createdAt
      databaseId
      descriptionHTML
      id
      readme
      viewerIsAdmin
    }
    createdAt
  }
  marketplaceCategory(slug: $Query__marketplaceCategory__slug) {
    description
    primaryListingCount
  }
  marketplaceListing(slug: $Query__marketplaceListing__slug) {
    extendedDescription
    extendedDescriptionHTML
    fullDescription
    hasTermsOfService
    hasVerifiedOwner
    howItWorksHTML
    id
    installationUrl
    isDraft
    isPaid
    isPublic
    isRejected
    isUnverified
    isVerificationPendingFromDraft
    isVerified
    logoBackgroundColor
    logoUrl
    name
    normalizedShortDescription
    screenshotUrls
    supportEmail
    supportUrl
    url
    viewerCanApprove
    viewerCanEdit
    viewerCanEditPlans
    viewerCanRedraft
    viewerIsListingAdmin
  }
  marketplaceListings(first: $Query__marketplaceListings__first) {
    totalCount
  }
  meta {
    githubEnterpriseImporterIpAddresses
    gitIpAddresses
    hookIpAddresses
    isPasswordAuthenticationVerifiable
  }
  search(first: $Query__search__first, query: $Query__search__query, type: $Query__search__type) {
    codeCount
    discussionCount
    issueCount
    repositoryCount
    userCount
  }
  securityAdvisory(ghsaId: $Query__securityAdvisory__ghsaId) {
    classification
    databaseId
    ghsaId
    id
    notificationsPermalink
    origin
    publishedAt
    severity
    summary
  }
  topic(name: $Query__topic__name) {
    relatedTopics(first: $Topic__relatedTopics__first) {
      id
      name
      viewerHasStarred
    }
    repositories(first: $Topic__repositories__first) {
      totalCount
    }
    stargazers(first: $Topic__stargazers__first) {
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
      }
    }
    id
    stargazerCount
  }
  user(login: $Query__user__login) {
    anyPinnableItems
    createdAt
    databaseId
    estimatedNextSponsorsPayoutInCents
    hasSponsorsListing
    id
    isGitHubStar
    isSiteAdmin
    isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
    isViewer
    location
    monthlyEstimatedSponsorsIncomeInCents
    projectsResourcePath
    projectsUrl
    pronouns
    resourcePath
    totalSponsorshipAmountAsSponsorInCents
    twitterUsername
    url
    viewerCanSponsor
    websiteUrl
  }
}
