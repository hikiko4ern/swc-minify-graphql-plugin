query RandomQuery($Query__marketplaceListings__first: Int, $Query__enterpriseAdministratorInvitation__enterpriseSlug: String!, $Query__enterpriseAdministratorInvitation__role: EnterpriseAdministratorRole!, $Query__enterpriseAdministratorInvitation__userLogin: String!, $EnterpriseServerInstallation__userAccountsUploads__first: Int, $EnterpriseOwnerInfo__enterpriseServerInstallations__first: Int, $Organization__recentProjects__first: Int, $Organization__domains__first: Int, $Organization__ipAllowListEntries__first: Int, $Organization__mannequins__first: Int, $User__sponsorshipsAsSponsor__first: Int, $User__commitComments__first: Int, $User__followers__first: Int, $User__gist__name: String!, $User__gists__first: Int, $User__issues__first: Int, $User__lifetimeReceivedSponsorshipValues__first: Int, $User__organization__login: String!, $User__organizations__first: Int, $User__pinnedItems__first: Int, $User__projectsV2__first: Int, $User__projectV2__number: Int!, $User__publicKeys__first: Int, $User__repository__name: String!, $User__repositoryDiscussionComments__first: Int, $User__repositoryDiscussions__first: Int, $User__socialAccounts__first: Int, $User__sponsoring__first: Int, $User__sponsorsActivities__first: Int, $User__topRepositories__first: Int, $User__topRepositories__orderBy: RepositoryOrder!, $User__watching__first: Int, $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login: String!, $Organization__memberStatuses__first: Int, $User__isSponsoredBy__accountLogin: String!, $Organization__pendingMembers__first: Int, $Organization__pinnedItems__first: Int, $Project__columns__first: Int, $Project__pendingCards__first: Int, $Organization__project__number: Int!, $Organization__repositories__first: Int, $ReactionGroup__reactors__first: Int, $DiscussionComment__replies__first: Int, $DiscussionComment__userContentEdits__first: Int, $Organization__repositoryDiscussionComments__first: Int, $Organization__sponsoring__first: Int, $Organization__sponsorsActivities__first: Int, $User__enterprises__first: Int, $User__issueComments__first: Int, $ProfileItemShowcase__items__first: Int, $User__packages__first: Int, $User__projects__first: Int, $ProjectV2__view__number: Int!, $ProjectV2__repositories__first: Int, $ProjectV2__workflow__number: Int!, $User__pullRequests__first: Int, $User__repositories__first: Int, $User__repositoriesContributedTo__first: Int, $User__sponsors__first: Int, $User__sponsorshipNewsletters__first: Int, $Organization__isSponsoredBy__accountLogin: String!, $EnterpriseOwnerInfo__defaultRepositoryPermissionSettingOrganizations__first: Int, $EnterpriseOwnerInfo__defaultRepositoryPermissionSettingOrganizations__value: DefaultRepositoryPermissionField!, $EnterpriseOwnerInfo__domains__first: Int, $EnterpriseOwnerInfo__failedInvitations__first: Int, $EnterpriseOwnerInfo__ipAllowListEntries__first: Int, $Ref__associatedPullRequests__first: Int, $BranchProtectionRule__bypassPullRequestAllowances__first: Int, $BranchProtectionRule__bypassForcePushAllowances__first: Int, $BranchProtectionRule__pushAllowances__first: Int, $BranchProtectionRule__reviewDismissalAllowances__first: Int, $Ref__compare__headRef: String!, $Repository__label__name: String!, $Repository__assignableUsers__first: Int, $Repository__commitComments__first: Int, $Repository__deployKeys__first: Int, $Repository__issue__number: Int!, $Repository__projectsV2__first: Int, $Repository__projectV2__number: Int!, $Repository__pullRequest__number: Int!, $Repository__ref__qualifiedName: String!, $Repository__release__tagName: String!, $Repository__releases__first: Int, $Repository__submodules__first: Int, $Repository__vulnerabilityAlert__number: Int!, $Repository__vulnerabilityAlerts__first: Int, $Repository__dependencyGraphManifests__first: Int, $Repository__discussionCategories__first: Int, $Repository__discussions__first: Int, $Environment__protectionRules__first: Int, $Repository__environment__name: String!, $Repository__environments__first: Int, $Repository__issues__first: Int, $IssueTemplate__labels__first: Int, $IssueTemplate__assignees__first: Int, $Repository__labels__first: Int, $User__organizationVerifiedDomainEmails__login: String!, $Repository__mentionableUsers__first: Int, $Repository__milestone__number: Int!, $Milestone__pullRequests__first: Int, $Repository__milestones__first: Int, $Repository__packages__first: Int, $PullRequest__assignees__first: Int, $PullRequest__comments__first: Int, $PullRequest__latestReviews__first: Int, $Commit__authors__first: Int, $Commit__associatedPullRequests__first: Int, $Commit__comments__first: Int, $Commit__file__path: String!, $Commit__history__first: Int, $Commit__submodules__first: Int, $PullRequest__projectItems__first: Int, $PullRequest__projectsV2__first: Int, $PullRequest__projectV2__number: Int!, $PullRequest__reviews__first: Int, $PullRequest__reviewThreads__first: Int, $PullRequest__timelineItems__first: Int, $PullRequest__userContentEdits__first: Int, $Repository__branchProtectionRules__first: Int, $Repository__deployments__first: Int, $Repository__discussion__number: Int!, $Repository__discussionCategory__slug: String!, $Repository__languages__first: Int, $Repository__pinnedDiscussions__first: Int, $Repository__pinnedEnvironments__first: Int, $Repository__project__number: Int!, $Repository__projects__first: Int, $Repository__recentProjects__first: Int, $Repository__repositoryTopics__first: Int, $Repository__ruleset__databaseId: Int!, $Repository__rulesets__first: Int, $Repository__stargazers__first: Int, $Repository__watchers__first: Int, $Ref__rules__first: Int, $Release__mentions__first: Int, $Release__releaseAssets__first: Int, $Commit__checkSuites__first: Int, $RepositoryRuleset__bypassActors__first: Int, $RepositoryRuleset__rules__first: Int, $Repository__pinnedIssues__first: Int, $Organization__repository__name: String!, $Organization__auditLog__first: Int, $Organization__lifetimeReceivedSponsorshipValues__first: Int, $User__following__first: Int, $User__lists__first: Int, $Organization__packages__first: Int, $Organization__enterpriseOwners__first: Int, $Organization__membersWithRole__first: Int, $Organization__projects__first: Int, $Organization__projectsV2__first: Int, $Organization__repositoryDiscussions__first: Int, $Organization__sponsorshipsAsMaintainer__first: Int, $Organization__sponsorshipsAsSponsor__first: Int, $Organization__team__slug: String!, $ProjectV2__fields__first: Int, $ProjectV2__teams__first: Int, $ProjectV2__views__first: Int, $User__recentProjects__first: Int, $Organization__pinnableItems__first: Int, $Organization__repositoryMigrations__first: Int, $Organization__ruleset__databaseId: Int!, $Organization__rulesets__first: Int, $Organization__sponsors__first: Int, $ProjectV2__items__first: Int, $Organization__projectV2__number: Int!, $SponsorsListing__tiers__first: Int, $Team__childTeams__first: Int, $Team__discussions__first: Int, $Team__invitations__first: Int, $User__gistComments__first: Int, $User__pinnableItems__first: Int, $Team__members__first: Int, $Team__memberStatuses__first: Int, $EnterpriseOwnerInfo__membersCanChangeRepositoryVisibilitySettingOrganizations__first: Int, $EnterpriseOwnerInfo__membersCanChangeRepositoryVisibilitySettingOrganizations__value: Boolean!, $Organization__sponsorshipNewsletters__first: Int, $EnterpriseOwnerInfo__membersCanDeleteIssuesSettingOrganizations__first: Int, $EnterpriseOwnerInfo__membersCanDeleteIssuesSettingOrganizations__value: Boolean!, $EnterpriseOwnerInfo__membersCanUpdateProtectedBranchesSettingOrganizations__first: Int, $EnterpriseOwnerInfo__membersCanUpdateProtectedBranchesSettingOrganizations__value: Boolean!, $EnterpriseOwnerInfo__membersCanViewDependencyInsightsSettingOrganizations__first: Int, $EnterpriseOwnerInfo__membersCanViewDependencyInsightsSettingOrganizations__value: Boolean!, $EnterpriseOwnerInfo__organizationProjectsSettingOrganizations__first: Int, $EnterpriseOwnerInfo__organizationProjectsSettingOrganizations__value: Boolean!, $EnterpriseOwnerInfo__pendingAdminInvitations__first: Int, $EnterpriseOwnerInfo__pendingUnaffiliatedMemberInvitations__first: Int, $EnterpriseOwnerInfo__samlIdentityProviderSettingOrganizations__first: Int, $EnterpriseOwnerInfo__samlIdentityProviderSettingOrganizations__value: IdentityProviderConfigurationState!, $EnterpriseOwnerInfo__supportEntitlements__first: Int, $Repository__forks__first: Int, $User__project__number: Int!, $User__savedReplies__first: Int, $User__sponsorshipsAsMaintainer__first: Int, $User__starredRepositories__first: Int, $ProjectV2__statusUpdates__first: Int, $ProjectV2__workflows__first: Int, $EnterpriseOwnerInfo__teamDiscussionsSettingOrganizations__first: Int, $EnterpriseOwnerInfo__teamDiscussionsSettingOrganizations__value: Boolean!, $EnterpriseOwnerInfo__twoFactorRequiredSettingOrganizations__first: Int, $EnterpriseOwnerInfo__twoFactorRequiredSettingOrganizations__value: Boolean!, $Enterprise__organizations__first: Int, $Query__enterpriseAdministratorInvitationByToken__invitationToken: String!, $Query__marketplaceListing__slug: String!, $Query__sponsorables__first: Int, $Query__topic__name: String!) {
  marketplaceListings(first: $Query__marketplaceListings__first) {
    nodes {
      companyUrl
      documentationUrl
      fullDescriptionHTML
      hasPublishedFreeTrialPlans
      howItWorks
      howItWorksHTML
      isPaid
      isPublic
      isVerificationPendingFromDraft
      isVerificationPendingFromUnverified
      logoBackgroundColor
      pricingUrl
      resourcePath
      screenshotUrls
      slug
      termsOfServiceUrl
      url
      viewerCanAddPlans
      viewerCanApprove
      viewerCanEdit
      viewerCanEditPlans
      viewerCanReject
      viewerCanRequestApproval
      viewerHasPurchased
      viewerHasPurchasedForAllOrganizations
      viewerIsListingAdmin
    }
  }
  enterpriseAdministratorInvitation(enterpriseSlug: $Query__enterpriseAdministratorInvitation__enterpriseSlug, role: $Query__enterpriseAdministratorInvitation__role, userLogin: $Query__enterpriseAdministratorInvitation__userLogin) {
    createdAt
    email
    id
    role
  }
  enterpriseAdministratorInvitationByToken(invitationToken: $Query__enterpriseAdministratorInvitationByToken__invitationToken) {
    enterprise {
      ownerInfo {
        enterpriseServerInstallations(first: $EnterpriseOwnerInfo__enterpriseServerInstallations__first) {
          nodes {
            userAccountsUploads(first: $EnterpriseServerInstallation__userAccountsUploads__first) {
              nodes {
                createdAt
                id
                name
                updatedAt
              }
              totalCount
            }
            customerName
            id
          }
          pageInfo {
            hasPreviousPage
            startCursor
          }
        }
        defaultRepositoryPermissionSettingOrganizations(first: $EnterpriseOwnerInfo__defaultRepositoryPermissionSettingOrganizations__first, value: $EnterpriseOwnerInfo__defaultRepositoryPermissionSettingOrganizations__value) {
          nodes {
            recentProjects(first: $Organization__recentProjects__first) {
              pageInfo {
                hasPreviousPage
                startCursor
              }
              edges {
                node {
                  closedAt
                  fullDatabaseId
                  public
                  shortDescription
                  template
                  url
                  viewerCanReopen
                }
                cursor
              }
              totalCount
            }
            domains(first: $Organization__domains__first) {
              totalCount
            }
            ipAllowListEntries(first: $Organization__ipAllowListEntries__first) {
              nodes {
                isActive
                name
                updatedAt
              }
            }
            itemShowcase {
              hasPinnedItems
            }
            mannequins(first: $Organization__mannequins__first) {
              edges {
                cursor
              }
            }
            memberStatuses(first: $Organization__memberStatuses__first) {
              edges {
                node {
                  emoji
                  emojiHTML
                  indicatesLimitedAvailability
                  updatedAt
                }
                cursor
              }
              nodes {
                user {
                  sponsorshipsAsSponsor(first: $User__sponsorshipsAsSponsor__first) {
                    totalCount
                  }
                  commitComments(first: $User__commitComments__first) {
                    totalCount
                  }
                  followers(first: $User__followers__first) {
                    totalCount
                  }
                  gist(name: $User__gist__name) {
                    createdAt
                    description
                    id
                    isPublic
                    resourcePath
                    url
                    viewerHasStarred
                  }
                  gists(first: $User__gists__first) {
                    totalCount
                  }
                  interactionAbility {
                    limit
                  }
                  issues(first: $User__issues__first) {
                    totalCount
                  }
                  itemShowcase {
                    hasPinnedItems
                  }
                  lifetimeReceivedSponsorshipValues(first: $User__lifetimeReceivedSponsorshipValues__first) {
                    totalCount
                  }
                  organization(login: $User__organization__login) {
                    announcementCreatedAt
                    announcementUserDismissible
                    anyPinnableItems
                    archivedAt
                    avatarUrl
                    description
                    descriptionHTML
                    estimatedNextSponsorsPayoutInCents
                    hasSponsorsListing
                    location
                    notificationDeliveryRestrictionEnabledSetting
                    requiresTwoFactorAuthentication
                    resourcePath
                    teamsUrl
                    totalSponsorshipAmountAsSponsorInCents
                    twitterUsername
                    url
                    viewerCanChangePinnedItems
                    viewerCanCreateRepositories
                    viewerIsAMember
                    viewerIsFollowing
                    viewerIsSponsoring
                    webCommitSignoffRequired
                    websiteUrl
                  }
                  organizations(first: $User__organizations__first) {
                    totalCount
                  }
                  pinnedItems(first: $User__pinnedItems__first) {
                    totalCount
                  }
                  projectsV2(first: $User__projectsV2__first) {
                    totalCount
                  }
                  projectV2(number: $User__projectV2__number) {
                    closedAt
                    createdAt
                    databaseId
                    id
                    shortDescription
                    template
                    title
                    updatedAt
                    url
                    viewerCanUpdate
                  }
                  publicKeys(first: $User__publicKeys__first) {
                    totalCount
                  }
                  repository(name: $User__repository__name) {
                    archivedAt
                    createdAt
                    deleteBranchOnMerge
                    description
                    descriptionHTML
                    diskUsage
                    forkingAllowed
                    hasDiscussionsEnabled
                    hasProjectsEnabled
                    hasSponsorshipsEnabled
                    hasWikiEnabled
                    id
                    isBlankIssuesEnabled
                    isEmpty
                    isFork
                    isLocked
                    isMirror
                    isUserConfigurationRepository
                    mergeCommitMessage
                    name
                    rebaseMergeAllowed
                    securityPolicyUrl
                    shortDescriptionHTML
                    squashMergeAllowed
                    squashMergeCommitMessage
                    squashMergeCommitTitle
                    squashPrTitleUsedAsDefault
                    updatedAt
                    url
                    viewerCanSubscribe
                    viewerCanUpdateTopics
                    viewerDefaultMergeMethod
                    viewerPermission
                  }
                  repositoryDiscussionComments(first: $User__repositoryDiscussionComments__first) {
                    totalCount
                  }
                  repositoryDiscussions(first: $User__repositoryDiscussions__first) {
                    totalCount
                  }
                  socialAccounts(first: $User__socialAccounts__first) {
                    totalCount
                  }
                  sponsoring(first: $User__sponsoring__first) {
                    totalCount
                  }
                  sponsorsActivities(first: $User__sponsorsActivities__first) {
                    totalCount
                  }
                  sponsorshipForViewerAsSponsor {
                    createdAt
                    isOneTimePayment
                    tierSelectedAt
                  }
                  sponsorshipForViewerAsSponsorable {
                    isActive
                    isSponsorOptedIntoEmail
                    paymentSource
                    privacyLevel
                    tierSelectedAt
                  }
                  topRepositories(first: $User__topRepositories__first, orderBy: $User__topRepositories__orderBy) {
                    totalDiskUsage
                  }
                  watching(first: $User__watching__first) {
                    totalDiskUsage
                  }
                  bio
                  bioHTML
                  canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                  estimatedNextSponsorsPayoutInCents
                  hasSponsorsListing
                  id
                  isDeveloperProgramMember
                  isGitHubStar
                  isSiteAdmin
                  location
                  login
                  monthlyEstimatedSponsorsIncomeInCents
                  name
                  pinnedItemsRemaining
                  pronouns
                  resourcePath
                  totalSponsorshipAmountAsSponsorInCents
                  viewerCanCreateProjects
                  viewerIsFollowing
                  websiteUrl
                }
                emojiHTML
                id
                indicatesLimitedAvailability
              }
              pageInfo {
                hasNextPage
                hasPreviousPage
                startCursor
              }
            }
            pendingMembers(first: $Organization__pendingMembers__first) {
              nodes {
                anyPinnableItems
                avatarUrl
                bio
                company
                companyHTML
                createdAt
                email
                hasSponsorsListing
                id
                isCampusExpert
                isFollowingViewer
                isGitHubStar
                isHireable
                isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                login
                pinnedItemsRemaining
                projectsResourcePath
                projectsUrl
                resourcePath
                totalSponsorshipAmountAsSponsorInCents
                twitterUsername
                updatedAt
                url
                viewerCanCreateProjects
                viewerCanSponsor
                viewerIsSponsoring
              }
            }
            pinnedItems(first: $Organization__pinnedItems__first) {
              totalCount
            }
            project(number: $Organization__project__number) {
              columns(first: $Project__columns__first) {
                totalCount
              }
              pendingCards(first: $Project__pendingCards__first) {
                edges {
                  cursor
                }
                pageInfo {
                  hasNextPage
                }
              }
              progress {
                enabled
                inProgressCount
                inProgressPercentage
                todoCount
              }
              bodyHTML
              closed
              closedAt
              createdAt
              databaseId
              resourcePath
              url
              viewerCanReopen
              viewerCanUpdate
            }
            repositories(first: $Organization__repositories__first) {
              totalDiskUsage
            }
            repositoryDiscussionComments(first: $Organization__repositoryDiscussionComments__first) {
              edges {
                node {
                  authorAssociation
                  body
                  createdAt
                  deletedAt
                  id
                  includesCreatedEdit
                  isAnswer
                  isMinimized
                  lastEditedAt
                  updatedAt
                  url
                  viewerCanDelete
                  viewerCanReact
                  viewerCanUpvote
                  viewerDidAuthor
                }
              }
              nodes {
                discussion {
                  activeLockReason
                  authorAssociation
                  body
                  bodyHTML
                  bodyText
                  closedAt
                  createdAt
                  lastEditedAt
                  locked
                  publishedAt
                  resourcePath
                  viewerCanDelete
                  viewerCanReact
                  viewerCanReopen
                  viewerCanUpdate
                  viewerCanUpvote
                  viewerHasUpvoted
                }
                reactionGroups {
                  reactors(first: $ReactionGroup__reactors__first) {
                    totalCount
                  }
                  createdAt
                }
                replies(first: $DiscussionComment__replies__first) {
                  nodes {
                    bodyHTML
                    createdAt
                    createdViaEmail
                    databaseId
                    id
                    includesCreatedEdit
                    isAnswer
                    isMinimized
                    minimizedReason
                    resourcePath
                    url
                    viewerCannotUpdateReasons
                    viewerCanUpdate
                    viewerCanUpvote
                    viewerDidAuthor
                    viewerHasUpvoted
                  }
                  edges {
                    cursor
                  }
                }
                replyTo {
                  createdAt
                  createdViaEmail
                  deletedAt
                  id
                  isAnswer
                  minimizedReason
                  publishedAt
                  updatedAt
                  viewerCanDelete
                  viewerCanMinimize
                  viewerCannotUpdateReasons
                  viewerCanReact
                  viewerCanUnmarkAsAnswer
                  viewerCanUpdate
                  viewerCanUpvote
                  viewerDidAuthor
                  viewerHasUpvoted
                }
                userContentEdits(first: $DiscussionComment__userContentEdits__first) {
                  pageInfo {
                    hasNextPage
                    hasPreviousPage
                    startCursor
                  }
                  edges {
                    cursor
                  }
                }
                bodyHTML
                bodyText
                createdAt
                createdViaEmail
                databaseId
                deletedAt
                includesCreatedEdit
                isAnswer
                resourcePath
                upvoteCount
                viewerCanDelete
                viewerCanMarkAsAnswer
                viewerCanReact
                viewerCanUnmarkAsAnswer
                viewerCanUpvote
                viewerDidAuthor
              }
              pageInfo {
                startCursor
              }
            }
            sponsoring(first: $Organization__sponsoring__first) {
              edges {
                cursor
              }
            }
            sponsorsActivities(first: $Organization__sponsorsActivities__first) {
              edges {
                cursor
              }
              nodes {
                previousSponsorsTier {
                  adminInfo {
                    isPublished
                    isRetired
                  }
                  createdAt
                  description
                  isCustomAmount
                  monthlyPriceInDollars
                  name
                  updatedAt
                }
                sponsorsTier {
                  description
                  id
                  isOneTime
                  name
                  updatedAt
                }
                action
                id
                timestamp
              }
              totalCount
            }
            sponsorshipForViewerAsSponsor {
              tier {
                descriptionHTML
                isOneTime
                monthlyPriceInDollars
              }
              maintainer {
                contributionsCollection {
                  contributionCalendar {
                    isHalloween
                  }
                  popularIssueContribution {
                    isRestricted
                    occurredAt
                    resourcePath
                  }
                  popularPullRequestContribution {
                    url
                  }
                  contributionYears
                  earliestRestrictedContributionDate
                  endedAt
                  hasAnyContributions
                  hasAnyRestrictedContributions
                  isSingleDay
                  restrictedContributionsCount
                  startedAt
                  totalCommitContributions
                  totalIssueContributions
                  totalPullRequestReviewContributions
                  totalRepositoriesWithContributedPullRequests
                }
                enterprises(first: $User__enterprises__first) {
                  pageInfo {
                    hasNextPage
                    hasPreviousPage
                  }
                  edges {
                    cursor
                  }
                  nodes {
                    announcement
                    billingEmail
                    createdAt
                    databaseId
                    description
                    descriptionHTML
                    id
                    location
                    readmeHTML
                    slug
                    url
                  }
                }
                followers(first: $User__followers__first) {
                  edges {
                    cursor
                  }
                }
                gist(name: $User__gist__name) {
                  createdAt
                  description
                  id
                  isFork
                  isPublic
                  resourcePath
                  stargazerCount
                  updatedAt
                  viewerHasStarred
                }
                gists(first: $User__gists__first) {
                  pageInfo {
                    endCursor
                    hasPreviousPage
                  }
                  totalCount
                }
                issueComments(first: $User__issueComments__first) {
                  edges {
                    cursor
                  }
                }
                itemShowcase {
                  items(first: $ProfileItemShowcase__items__first) {
                    totalCount
                  }
                  hasPinnedItems
                }
                organizations(first: $User__organizations__first) {
                  totalCount
                }
                packages(first: $User__packages__first) {
                  nodes {
                    name
                  }
                }
                projects(first: $User__projects__first) {
                  totalCount
                }
                projectsV2(first: $User__projectsV2__first) {
                  pageInfo {
                    endCursor
                    hasNextPage
                    hasPreviousPage
                    startCursor
                  }
                  edges {
                    cursor
                  }
                  totalCount
                }
                projectV2(number: $User__projectV2__number) {
                  view(number: $ProjectV2__view__number) {
                    createdAt
                    databaseId
                    fullDatabaseId
                    id
                    number
                  }
                  repositories(first: $ProjectV2__repositories__first) {
                    totalCount
                    totalDiskUsage
                  }
                  workflow(number: $ProjectV2__workflow__number) {
                    databaseId
                    enabled
                    fullDatabaseId
                    name
                  }
                  closed
                  fullDatabaseId
                  id
                  number
                  readme
                  resourcePath
                  template
                  url
                  viewerCanClose
                  viewerCanReopen
                }
                pullRequests(first: $User__pullRequests__first) {
                  nodes {
                    activeLockReason
                    authorAssociation
                    baseRefName
                    body
                    bodyText
                    canBeRebased
                    checksResourcePath
                    createdViaEmail
                    fullDatabaseId
                    headRefName
                    includesCreatedEdit
                    isCrossRepository
                    isInMergeQueue
                    isMergeQueueEnabled
                    locked
                    maintainerCanModify
                    mergeStateStatus
                    number
                    publishedAt
                    revertUrl
                    totalCommentsCount
                    url
                    viewerCanApplySuggestion
                    viewerCanDeleteHeadRef
                    viewerCanEditFiles
                    viewerCanEnableAutoMerge
                    viewerCanLabel
                    viewerCanMergeAsAdmin
                    viewerCanSubscribe
                    viewerCanUpdateBranch
                    viewerSubscription
                  }
                }
                repositories(first: $User__repositories__first) {
                  totalCount
                  totalDiskUsage
                }
                repositoriesContributedTo(first: $User__repositoriesContributedTo__first) {
                  edges {
                    cursor
                  }
                  pageInfo {
                    hasNextPage
                  }
                  totalDiskUsage
                }
                sponsors(first: $User__sponsors__first) {
                  totalCount
                }
                sponsorshipForViewerAsSponsor {
                  id
                  isSponsorOptedIntoEmail
                  paymentSource
                }
                sponsorshipNewsletters(first: $User__sponsorshipNewsletters__first) {
                  nodes {
                    isPublished
                  }
                }
                sponsorsListing {
                  billingCountryOrRegion
                  createdAt
                  fullDescription
                  id
                  name
                  nextPayoutDate
                  residenceCountryOrRegion
                  url
                }
                canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                company
                companyHTML
                databaseId
                id
                isBountyHunter
                isCampusExpert
                isEmployee
                isFollowingViewer
                isGitHubStar
                isViewer
                location
                projectsUrl
                totalSponsorshipAmountAsSponsorInCents
                viewerCanCreateProjects
                viewerCanFollow
                viewerCanSponsor
                viewerIsFollowing
              }
              isSponsorOptedIntoEmail
              tierSelectedAt
            }
            announcementExpiresAt
            announcementUserDismissible
            anyPinnableItems
            archivedAt
            avatarUrl
            createdAt
            databaseId
            description
            descriptionHTML
            email
            estimatedNextSponsorsPayoutInCents
            id
            ipAllowListEnabledSetting
            ipAllowListForInstalledAppsEnabledSetting
            isSponsoredBy(accountLogin: $Organization__isSponsoredBy__accountLogin)
            isVerified
            location
            newTeamResourcePath
            newTeamUrl
            notificationDeliveryRestrictionEnabledSetting
            organizationBillingEmail
            pinnedItemsRemaining
            projectsResourcePath
            requiresTwoFactorAuthentication
            resourcePath
            url
            viewerCanAdminister
            viewerCanCreateProjects
            viewerCanSponsor
            viewerIsAMember
            viewerIsSponsoring
          }
        }
        domains(first: $EnterpriseOwnerInfo__domains__first) {
          nodes {
            createdAt
            databaseId
            dnsHostName
            hasFoundHostName
            isVerified
            punycodeEncodedDomain
            tokenExpirationTime
            verificationToken
          }
          edges {
            node {
              createdAt
              databaseId
              dnsHostName
              hasFoundHostName
              isRequiredForPolicyEnforcement
              isVerified
              punycodeEncodedDomain
              updatedAt
              verificationToken
            }
          }
          totalCount
        }
        failedInvitations(first: $EnterpriseOwnerInfo__failedInvitations__first) {
          totalCount
          totalUniqueUserCount
        }
        ipAllowListEntries(first: $EnterpriseOwnerInfo__ipAllowListEntries__first) {
          edges {
            node {
              createdAt
            }
            cursor
          }
          nodes {
            createdAt
            id
          }
          pageInfo {
            hasNextPage
            hasPreviousPage
          }
        }
        membersCanChangeRepositoryVisibilitySettingOrganizations(first: $EnterpriseOwnerInfo__membersCanChangeRepositoryVisibilitySettingOrganizations__first, value: $EnterpriseOwnerInfo__membersCanChangeRepositoryVisibilitySettingOrganizations__value) {
          pageInfo {
            hasNextPage
            startCursor
          }
          edges {
            cursor
          }
          nodes {
            repository(name: $Organization__repository__name) {
              contactLinks {
                name
              }
              defaultBranchRef {
                refUpdateRule {
                  allowsDeletions
                  blocksCreations
                  pattern
                  requiredApprovingReviewCount
                  requiresCodeOwnerReviews
                  requiresLinearHistory
                  requiresSignatures
                  viewerAllowedToDismissReviews
                }
                associatedPullRequests(first: $Ref__associatedPullRequests__first) {
                  totalCount
                }
                branchProtectionRule {
                  bypassPullRequestAllowances(first: $BranchProtectionRule__bypassPullRequestAllowances__first) {
                    totalCount
                  }
                  bypassForcePushAllowances(first: $BranchProtectionRule__bypassForcePushAllowances__first) {
                    totalCount
                  }
                  pushAllowances(first: $BranchProtectionRule__pushAllowances__first) {
                    totalCount
                  }
                  requiredStatusChecks {
                    context
                  }
                  reviewDismissalAllowances(first: $BranchProtectionRule__reviewDismissalAllowances__first) {
                    totalCount
                  }
                  allowsDeletions
                  blocksCreations
                  databaseId
                  dismissesStaleReviews
                  id
                  isAdminEnforced
                  lockAllowsFetchAndMerge
                  lockBranch
                  pattern
                  requiredApprovingReviewCount
                  requiredStatusCheckContexts
                  requiresApprovingReviews
                  requiresCommitSignatures
                  requiresDeployments
                  requiresStatusChecks
                  requiresStrictStatusChecks
                  restrictsReviewDismissals
                }
                compare(headRef: $Ref__compare__headRef) {
                  aheadBy
                  status
                }
                repository {
                  label(name: $Repository__label__name) {
                    color
                    createdAt
                    id
                    resourcePath
                  }
                  assignableUsers(first: $Repository__assignableUsers__first) {
                    totalCount
                  }
                  codeOfConduct {
                    id
                    key
                    url
                  }
                  commitComments(first: $Repository__commitComments__first) {
                    totalCount
                  }
                  contactLinks {
                    about
                  }
                  deployKeys(first: $Repository__deployKeys__first) {
                    totalCount
                  }
                  issue(number: $Repository__issue__number) {
                    body
                    closed
                    createdAt
                    id
                    isReadByViewer
                    publishedAt
                    state
                    viewerCanClose
                    viewerCanDelete
                    viewerCanLabel
                    viewerCannotUpdateReasons
                    viewerCanReact
                    viewerCanUpdate
                    viewerDidAuthor
                    viewerSubscription
                    viewerThreadSubscriptionFormAction
                    viewerThreadSubscriptionStatus
                  }
                  issueTemplates {
                    about
                    body
                    title
                  }
                  latestRelease {
                    databaseId
                    id
                    publishedAt
                    resourcePath
                    shortDescriptionHTML
                    updatedAt
                    url
                    viewerCanReact
                  }
                  mergeQueue {
                    nextEntryEstimatedTimeToMerge
                  }
                  primaryLanguage {
                    id
                  }
                  projectsV2(first: $Repository__projectsV2__first) {
                    totalCount
                  }
                  projectV2(number: $Repository__projectV2__number) {
                    closed
                    shortDescription
                    template
                    title
                    viewerCanClose
                    viewerCanReopen
                    viewerCanUpdate
                  }
                  pullRequest(number: $Repository__pullRequest__number) {
                    activeLockReason
                    baseRefName
                    baseRefOid
                    bodyHTML
                    canBeRebased
                    checksResourcePath
                    checksUrl
                    fullDatabaseId
                    headRefOid
                    includesCreatedEdit
                    isCrossRepository
                    isReadByViewer
                    locked
                    maintainerCanModify
                    mergeable
                    merged
                    mergedAt
                    mergeStateStatus
                    number
                    permalink
                    revertUrl
                    reviewDecision
                    state
                    title
                    updatedAt
                    viewerCanClose
                    viewerCanDisableAutoMerge
                    viewerCanEditFiles
                    viewerCanEnableAutoMerge
                    viewerCanMergeAsAdmin
                    viewerCannotUpdateReasons
                    viewerCanReact
                    viewerCanUpdate
                    viewerDidAuthor
                    viewerMergeBodyText
                    viewerMergeHeadlineText
                    viewerSubscription
                  }
                  ref(qualifiedName: $Repository__ref__qualifiedName) {
                    name
                    prefix
                  }
                  release(tagName: $Repository__release__tagName) {
                    databaseId
                    description
                    descriptionHTML
                    id
                    isLatest
                    isPrerelease
                    name
                    shortDescriptionHTML
                    updatedAt
                    url
                    viewerCanReact
                  }
                  releases(first: $Repository__releases__first) {
                    totalCount
                  }
                  submodules(first: $Repository__submodules__first) {
                    totalCount
                  }
                  templateRepository {
                    databaseId
                    description
                    descriptionHTML
                    forkCount
                    forkingAllowed
                    hasDiscussionsEnabled
                    hasSponsorshipsEnabled
                    hasWikiEnabled
                    homepageUrl
                    isArchived
                    isDisabled
                    isEmpty
                    isLocked
                    isTemplate
                    isUserConfigurationRepository
                    lockReason
                    mergeCommitAllowed
                    mergeCommitMessage
                    mergeCommitTitle
                    mirrorUrl
                    name
                    nameWithOwner
                    pushedAt
                    rebaseMergeAllowed
                    squashMergeCommitMessage
                    squashMergeCommitTitle
                    squashPrTitleUsedAsDefault
                    sshUrl
                    tempCloneToken
                    updatedAt
                    url
                    usesCustomOpenGraphImage
                    viewerCanSubscribe
                    viewerDefaultCommitEmail
                    viewerDefaultMergeMethod
                    visibility
                    webCommitSignoffRequired
                  }
                  vulnerabilityAlert(number: $Repository__vulnerabilityAlert__number) {
                    autoDismissedAt
                    dependencyScope
                    fixedAt
                    state
                  }
                  vulnerabilityAlerts(first: $Repository__vulnerabilityAlerts__first) {
                    totalCount
                  }
                  createdAt
                  description
                  diskUsage
                  forkCount
                  forkingAllowed
                  hasIssuesEnabled
                  hasSponsorshipsEnabled
                  hasVulnerabilityAlertsEnabled
                  homepageUrl
                  id
                  isBlankIssuesEnabled
                  isDisabled
                  isFork
                  isInOrganization
                  isPrivate
                  isUserConfigurationRepository
                  mergeCommitTitle
                  mirrorUrl
                  nameWithOwner
                  openGraphImageUrl
                  projectsUrl
                  rebaseMergeAllowed
                  resourcePath
                  squashMergeCommitMessage
                  sshUrl
                  stargazerCount
                  tempCloneToken
                  updatedAt
                  viewerCanCreateProjects
                  viewerCanUpdateTopics
                  viewerDefaultMergeMethod
                  viewerPossibleCommitEmails
                }
                id
                name
              }
              dependencyGraphManifests(first: $Repository__dependencyGraphManifests__first) {
                pageInfo {
                  endCursor
                  hasPreviousPage
                }
              }
              discussionCategories(first: $Repository__discussionCategories__first) {
                nodes {
                  repository {
                    autoMergeAllowed
                    deleteBranchOnMerge
                    description
                    forkCount
                    forkingAllowed
                    hasDiscussionsEnabled
                    id
                    isMirror
                    isPrivate
                    isSecurityPolicyEnabled
                    isUserConfigurationRepository
                    lockReason
                    mergeCommitMessage
                    mergeCommitTitle
                    mirrorUrl
                    nameWithOwner
                    pushedAt
                    resourcePath
                    squashMergeAllowed
                    squashMergeCommitTitle
                    squashPrTitleUsedAsDefault
                    tempCloneToken
                    updatedAt
                    viewerCanCreateProjects
                    viewerCanSubscribe
                    viewerCanUpdateTopics
                    viewerHasStarred
                  }
                  createdAt
                  id
                  isAnswerable
                  name
                }
                edges {
                  node {
                    createdAt
                    description
                    emojiHTML
                    id
                    name
                    slug
                  }
                }
                totalCount
              }
              discussions(first: $Repository__discussions__first) {
                pageInfo {
                  endCursor
                  startCursor
                }
              }
              environment(name: $Repository__environment__name) {
                protectionRules(first: $Environment__protectionRules__first) {
                  totalCount
                }
                latestCompletedDeployment {
                  commitOid
                  databaseId
                  description
                  environment
                  payload
                  state
                }
                databaseId
                id
                isPinned
                name
              }
              environments(first: $Repository__environments__first) {
                pageInfo {
                  endCursor
                  hasNextPage
                  hasPreviousPage
                }
              }
              fundingLinks {
                url
              }
              issue(number: $Repository__issue__number) {
                authorAssociation
                body
                bodyResourcePath
                bodyText
                createdAt
                createdViaEmail
                databaseId
                id
                includesCreatedEdit
                isPinned
                isReadByViewer
                lastEditedAt
                locked
                number
                title
                titleHTML
                url
                viewerCanClose
                viewerCannotUpdateReasons
                viewerCanReact
                viewerCanReopen
                viewerCanUpdate
                viewerThreadSubscriptionFormAction
              }
              issues(first: $Repository__issues__first) {
                totalCount
              }
              issueTemplates {
                labels(first: $IssueTemplate__labels__first) {
                  totalCount
                }
                assignees(first: $IssueTemplate__assignees__first) {
                  totalCount
                }
                about
                body
                filename
                title
              }
              labels(first: $Repository__labels__first) {
                nodes {
                  repository {
                    allowUpdateBranch
                    archivedAt
                    autoMergeAllowed
                    createdAt
                    databaseId
                    deleteBranchOnMerge
                    description
                    descriptionHTML
                    diskUsage
                    hasProjectsEnabled
                    homepageUrl
                    id
                    isArchived
                    isBlankIssuesEnabled
                    isFork
                    isPrivate
                    isUserConfigurationRepository
                    mergeCommitAllowed
                    mergeCommitMessage
                    mergeCommitTitle
                    mirrorUrl
                    name
                    nameWithOwner
                    projectsUrl
                    rebaseMergeAllowed
                    securityPolicyUrl
                    shortDescriptionHTML
                    squashMergeAllowed
                    squashMergeCommitTitle
                    sshUrl
                    stargazerCount
                    tempCloneToken
                    updatedAt
                    usesCustomOpenGraphImage
                    viewerCanAdminister
                    viewerCanCreateProjects
                    viewerCanSubscribe
                    viewerCanUpdateTopics
                    viewerDefaultMergeMethod
                    viewerPermission
                    viewerPossibleCommitEmails
                    webCommitSignoffRequired
                  }
                  color
                  createdAt
                  isDefault
                  name
                  resourcePath
                  url
                }
              }
              mentionableUsers(first: $Repository__mentionableUsers__first) {
                edges {
                  node {
                    canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                    createdAt
                    databaseId
                    email
                    hasSponsorsListing
                    id
                    isBountyHunter
                    isDeveloperProgramMember
                    isEmployee
                    isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                    location
                    login
                    monthlyEstimatedSponsorsIncomeInCents
                    organizationVerifiedDomainEmails(login: $User__organizationVerifiedDomainEmails__login)
                    pinnedItemsRemaining
                    twitterUsername
                    url
                    viewerCanCreateProjects
                    viewerCanFollow
                    viewerIsFollowing
                    viewerIsSponsoring
                    websiteUrl
                  }
                  cursor
                }
              }
              mergeQueue {
                url
              }
              milestone(number: $Repository__milestone__number) {
                repository {
                  allowUpdateBranch
                  archivedAt
                  autoMergeAllowed
                  createdAt
                  deleteBranchOnMerge
                  descriptionHTML
                  diskUsage
                  hasDiscussionsEnabled
                  hasIssuesEnabled
                  hasVulnerabilityAlertsEnabled
                  hasWikiEnabled
                  homepageUrl
                  id
                  isArchived
                  isBlankIssuesEnabled
                  isEmpty
                  isInOrganization
                  isMirror
                  isPrivate
                  isUserConfigurationRepository
                  mirrorUrl
                  nameWithOwner
                  openGraphImageUrl
                  projectsResourcePath
                  pushedAt
                  resourcePath
                  securityPolicyUrl
                  shortDescriptionHTML
                  squashMergeAllowed
                  squashMergeCommitTitle
                  updatedAt
                  url
                  viewerCanSubscribe
                  viewerCanUpdateTopics
                  viewerPossibleCommitEmails
                  visibility
                  webCommitSignoffRequired
                }
                closedAt
                dueOn
                id
                number
                progressPercentage
                state
                title
                viewerCanClose
                viewerCanReopen
              }
              milestones(first: $Repository__milestones__first) {
                nodes {
                  repository {
                    allowUpdateBranch
                    autoMergeAllowed
                    createdAt
                    databaseId
                    deleteBranchOnMerge
                    description
                    descriptionHTML
                    diskUsage
                    hasDiscussionsEnabled
                    hasIssuesEnabled
                    hasVulnerabilityAlertsEnabled
                    hasWikiEnabled
                    isArchived
                    isEmpty
                    isInOrganization
                    isLocked
                    isPrivate
                    isUserConfigurationRepository
                    lockReason
                    mergeCommitAllowed
                    mergeCommitMessage
                    mergeCommitTitle
                    mirrorUrl
                    name
                    pushedAt
                    rebaseMergeAllowed
                    resourcePath
                    securityPolicyUrl
                    squashMergeCommitTitle
                    url
                    usesCustomOpenGraphImage
                    viewerCanAdminister
                    viewerCanCreateProjects
                    viewerCanUpdateTopics
                    viewerHasStarred
                    visibility
                  }
                  pullRequests(first: $Milestone__pullRequests__first) {
                    totalCount
                  }
                  closed
                  progressPercentage
                  resourcePath
                  title
                  viewerCanClose
                }
                pageInfo {
                  startCursor
                }
                totalCount
              }
              packages(first: $Repository__packages__first) {
                totalCount
              }
              planFeatures {
                codeowners
                draftPullRequests
                maximumAssignees
                teamReviewRequests
              }
              primaryLanguage {
                color
              }
              projectV2(number: $Repository__projectV2__number) {
                fullDatabaseId
                id
                number
                readme
                resourcePath
                title
                viewerCanUpdate
              }
              pullRequest(number: $Repository__pullRequest__number) {
                assignees(first: $PullRequest__assignees__first) {
                  pageInfo {
                    endCursor
                    hasNextPage
                  }
                }
                autoMergeRequest {
                  authorEmail
                  commitBody
                  commitHeadline
                }
                baseRef {
                  id
                  name
                  prefix
                }
                comments(first: $PullRequest__comments__first) {
                  pageInfo {
                    hasPreviousPage
                    startCursor
                  }
                }
                headRepository {
                  allowUpdateBranch
                  archivedAt
                  diskUsage
                  hasDiscussionsEnabled
                  hasIssuesEnabled
                  hasSponsorshipsEnabled
                  hasWikiEnabled
                  homepageUrl
                  isDisabled
                  isLocked
                  isPrivate
                  isSecurityPolicyEnabled
                  isUserConfigurationRepository
                  lockReason
                  mirrorUrl
                  name
                  projectsResourcePath
                  projectsUrl
                  pushedAt
                  securityPolicyUrl
                  squashMergeAllowed
                  squashPrTitleUsedAsDefault
                  stargazerCount
                  tempCloneToken
                  updatedAt
                  usesCustomOpenGraphImage
                  viewerCanCreateProjects
                  viewerPermission
                  viewerPossibleCommitEmails
                }
                latestReviews(first: $PullRequest__latestReviews__first) {
                  totalCount
                }
                potentialMergeCommit {
                  authors(first: $Commit__authors__first) {
                    totalCount
                  }
                  associatedPullRequests(first: $Commit__associatedPullRequests__first) {
                    totalCount
                  }
                  author {
                    avatarUrl
                    email
                    name
                  }
                  comments(first: $Commit__comments__first) {
                    totalCount
                  }
                  file(path: $Commit__file__path) {
                    isGenerated
                    mode
                    name
                    type
                  }
                  history(first: $Commit__history__first) {
                    totalCount
                  }
                  repository {
                    allowUpdateBranch
                    databaseId
                    description
                    descriptionHTML
                    diskUsage
                    forkCount
                    forkingAllowed
                    hasDiscussionsEnabled
                    hasIssuesEnabled
                    isArchived
                    isMirror
                    isTemplate
                    mergeCommitAllowed
                    mirrorUrl
                    name
                    nameWithOwner
                    openGraphImageUrl
                    rebaseMergeAllowed
                    resourcePath
                    squashMergeAllowed
                    url
                    usesCustomOpenGraphImage
                    viewerCanAdminister
                    viewerCanUpdateTopics
                    viewerDefaultMergeMethod
                    viewerHasStarred
                    viewerPossibleCommitEmails
                    visibility
                    webCommitSignoffRequired
                  }
                  submodules(first: $Commit__submodules__first) {
                    totalCount
                  }
                  tree {
                    commitUrl
                    id
                    oid
                  }
                  abbreviatedOid
                  additions
                  authoredByCommitter
                  changedFiles
                  changedFilesIfAvailable
                  committedDate
                  committedViaWeb
                  commitUrl
                  deletions
                  id
                  message
                  messageBody
                  messageHeadline
                  messageHeadlineHTML
                  pushedDate
                  treeUrl
                  viewerCanSubscribe
                  viewerSubscription
                }
                projectItems(first: $PullRequest__projectItems__first) {
                  pageInfo {
                    hasNextPage
                  }
                  edges {
                    cursor
                  }
                  nodes {
                    fullDatabaseId
                    isArchived
                  }
                  totalCount
                }
                projectsV2(first: $PullRequest__projectsV2__first) {
                  pageInfo {
                    startCursor
                  }
                  nodes {
                    closed
                    number
                    public
                    template
                    url
                    viewerCanUpdate
                  }
                }
                projectV2(number: $PullRequest__projectV2__number) {
                  closed
                  fullDatabaseId
                  id
                  public
                  readme
                  shortDescription
                  viewerCanReopen
                }
                reactionGroups {
                  viewerHasReacted
                }
                reviews(first: $PullRequest__reviews__first) {
                  totalCount
                }
                reviewThreads(first: $PullRequest__reviewThreads__first) {
                  pageInfo {
                    hasNextPage
                    hasPreviousPage
                    startCursor
                  }
                }
                suggestedReviewers {
                  isAuthor
                  isCommenter
                }
                timelineItems(first: $PullRequest__timelineItems__first) {
                  filteredCount
                  pageCount
                  totalCount
                  updatedAt
                }
                userContentEdits(first: $PullRequest__userContentEdits__first) {
                  pageInfo {
                    hasNextPage
                    hasPreviousPage
                    startCursor
                  }
                  edges {
                    cursor
                  }
                  nodes {
                    createdAt
                    deletedAt
                    id
                    updatedAt
                  }
                }
                viewerLatestReviewRequest {
                  databaseId
                  id
                }
                authorAssociation
                baseRefName
                baseRefOid
                body
                bodyHTML
                changedFiles
                checksResourcePath
                closedAt
                createdViaEmail
                deletions
                fullDatabaseId
                headRefName
                headRefOid
                includesCreatedEdit
                isCrossRepository
                isDraft
                isReadByViewer
                lastEditedAt
                maintainerCanModify
                mergeable
                mergeStateStatus
                publishedAt
                state
                title
                url
                viewerCanClose
                viewerCanEditFiles
                viewerCanEnableAutoMerge
                viewerCanLabel
                viewerCanMergeAsAdmin
                viewerCanSubscribe
                viewerCanUpdate
                viewerCanUpdateBranch
                viewerDidAuthor
              }
              ref(qualifiedName: $Repository__ref__qualifiedName) {
                repository {
                  projectsV2(first: $Repository__projectsV2__first) {
                    totalCount
                  }
                  assignableUsers(first: $Repository__assignableUsers__first) {
                    totalCount
                  }
                  branchProtectionRules(first: $Repository__branchProtectionRules__first) {
                    totalCount
                  }
                  codeOfConduct {
                    key
                    url
                  }
                  contactLinks {
                    url
                  }
                  deployments(first: $Repository__deployments__first) {
                    totalCount
                  }
                  discussion(number: $Repository__discussion__number) {
                    activeLockReason
                    answerChosenAt
                    bodyText
                    closed
                    closedAt
                    isAnswered
                    lastEditedAt
                    locked
                    updatedAt
                    viewerCanClose
                    viewerCanReact
                    viewerCanReopen
                    viewerCanSubscribe
                    viewerHasUpvoted
                  }
                  discussionCategories(first: $Repository__discussionCategories__first) {
                    totalCount
                  }
                  discussionCategory(slug: $Repository__discussionCategory__slug) {
                    emojiHTML
                    id
                    updatedAt
                  }
                  environment(name: $Repository__environment__name) {
                    databaseId
                    isPinned
                  }
                  interactionAbility {
                    origin
                  }
                  issueTemplates {
                    about
                    body
                    filename
                  }
                  label(name: $Repository__label__name) {
                    description
                    name
                  }
                  labels(first: $Repository__labels__first) {
                    totalCount
                  }
                  languages(first: $Repository__languages__first) {
                    totalSize
                  }
                  latestRelease {
                    description
                    id
                    isDraft
                    name
                    publishedAt
                    resourcePath
                    tagName
                    updatedAt
                    url
                  }
                  licenseInfo {
                    key
                    nickname
                    url
                  }
                  mentionableUsers(first: $Repository__mentionableUsers__first) {
                    totalCount
                  }
                  milestone(number: $Repository__milestone__number) {
                    closedAt
                    dueOn
                    id
                    number
                    resourcePath
                    state
                    updatedAt
                    url
                  }
                  parent {
                    allowUpdateBranch
                    autoMergeAllowed
                    descriptionHTML
                    diskUsage
                    forkCount
                    hasDiscussionsEnabled
                    hasIssuesEnabled
                    hasProjectsEnabled
                    hasSponsorshipsEnabled
                    hasVulnerabilityAlertsEnabled
                    hasWikiEnabled
                    homepageUrl
                    id
                    isEmpty
                    isLocked
                    isMirror
                    isSecurityPolicyEnabled
                    isTemplate
                    lockReason
                    mergeCommitTitle
                    name
                    openGraphImageUrl
                    projectsResourcePath
                    pushedAt
                    rebaseMergeAllowed
                    resourcePath
                    securityPolicyUrl
                    squashMergeCommitMessage
                    squashMergeCommitTitle
                    tempCloneToken
                    url
                    viewerCanAdminister
                    viewerCanCreateProjects
                    viewerDefaultCommitEmail
                    viewerHasStarred
                    viewerPermission
                  }
                  pinnedDiscussions(first: $Repository__pinnedDiscussions__first) {
                    totalCount
                  }
                  pinnedEnvironments(first: $Repository__pinnedEnvironments__first) {
                    totalCount
                  }
                  planFeatures {
                    codeowners
                    maximumAssignees
                    teamReviewRequests
                  }
                  project(number: $Repository__project__number) {
                    body
                    closed
                    createdAt
                    databaseId
                    id
                    name
                    resourcePath
                    state
                    updatedAt
                    viewerCanReopen
                    viewerCanUpdate
                  }
                  projects(first: $Repository__projects__first) {
                    totalCount
                  }
                  recentProjects(first: $Repository__recentProjects__first) {
                    totalCount
                  }
                  ref(qualifiedName: $Repository__ref__qualifiedName) {
                    name
                  }
                  release(tagName: $Repository__release__tagName) {
                    createdAt
                    id
                    isLatest
                    isPrerelease
                    publishedAt
                    resourcePath
                    shortDescriptionHTML
                    tagName
                    updatedAt
                  }
                  releases(first: $Repository__releases__first) {
                    totalCount
                  }
                  repositoryTopics(first: $Repository__repositoryTopics__first) {
                    totalCount
                  }
                  ruleset(databaseId: $Repository__ruleset__databaseId) {
                    createdAt
                    enforcement
                  }
                  rulesets(first: $Repository__rulesets__first) {
                    totalCount
                  }
                  stargazers(first: $Repository__stargazers__first) {
                    totalCount
                  }
                  templateRepository {
                    autoMergeAllowed
                    createdAt
                    deleteBranchOnMerge
                    descriptionHTML
                    forkingAllowed
                    hasIssuesEnabled
                    hasProjectsEnabled
                    hasWikiEnabled
                    homepageUrl
                    id
                    isArchived
                    isDisabled
                    isFork
                    isUserConfigurationRepository
                    lockReason
                    mergeCommitAllowed
                    mergeCommitMessage
                    name
                    nameWithOwner
                    openGraphImageUrl
                    projectsUrl
                    resourcePath
                    squashMergeCommitTitle
                    sshUrl
                    updatedAt
                    viewerCanAdminister
                    viewerDefaultCommitEmail
                    viewerHasStarred
                    viewerSubscription
                    visibility
                  }
                  vulnerabilityAlerts(first: $Repository__vulnerabilityAlerts__first) {
                    totalCount
                  }
                  watchers(first: $Repository__watchers__first) {
                    totalCount
                  }
                  allowUpdateBranch
                  archivedAt
                  autoMergeAllowed
                  databaseId
                  deleteBranchOnMerge
                  description
                  hasIssuesEnabled
                  hasVulnerabilityAlertsEnabled
                  hasWikiEnabled
                  id
                  isDisabled
                  isFork
                  isMirror
                  isSecurityPolicyEnabled
                  mergeCommitTitle
                  name
                  openGraphImageUrl
                  projectsResourcePath
                  rebaseMergeAllowed
                  securityPolicyUrl
                  shortDescriptionHTML
                  squashMergeAllowed
                  squashMergeCommitTitle
                  stargazerCount
                  viewerCanCreateProjects
                  viewerDefaultCommitEmail
                  viewerDefaultMergeMethod
                  viewerPermission
                  webCommitSignoffRequired
                }
                refUpdateRule {
                  allowsForcePushes
                  blocksCreations
                  pattern
                  requiresCodeOwnerReviews
                  requiresLinearHistory
                }
                rules(first: $Ref__rules__first) {
                  nodes {
                    id
                  }
                  pageInfo {
                    hasPreviousPage
                    startCursor
                  }
                }
              }
              release(tagName: $Repository__release__tagName) {
                tag {
                  compare(headRef: $Ref__compare__headRef) {
                    aheadBy
                    behindBy
                    status
                  }
                  branchProtectionRule {
                    allowsDeletions
                    allowsForcePushes
                    lockBranch
                    pattern
                    requiredApprovingReviewCount
                    requiredStatusCheckContexts
                    requiresApprovingReviews
                    requiresDeployments
                    requiresLinearHistory
                    requiresStrictStatusChecks
                  }
                  refUpdateRule {
                    allowsDeletions
                    pattern
                    requiredApprovingReviewCount
                    requiresCodeOwnerReviews
                    requiresSignatures
                    viewerAllowedToDismissReviews
                  }
                  name
                }
                mentions(first: $Release__mentions__first) {
                  totalCount
                }
                reactionGroups {
                  reactors(first: $ReactionGroup__reactors__first) {
                    totalCount
                  }
                  createdAt
                  viewerHasReacted
                }
                releaseAssets(first: $Release__releaseAssets__first) {
                  pageInfo {
                    endCursor
                    hasNextPage
                    hasPreviousPage
                  }
                  edges {
                    cursor
                  }
                  totalCount
                }
                tagCommit {
                  status {
                    id
                  }
                  associatedPullRequests(first: $Commit__associatedPullRequests__first) {
                    totalCount
                  }
                  author {
                    avatarUrl
                    date
                    email
                    name
                  }
                  authors(first: $Commit__authors__first) {
                    totalCount
                  }
                  checkSuites(first: $Commit__checkSuites__first) {
                    totalCount
                  }
                  comments(first: $Commit__comments__first) {
                    totalCount
                  }
                  committer {
                    date
                    name
                  }
                  file(path: $Commit__file__path) {
                    lineCount
                    size
                    type
                  }
                  repository {
                    archivedAt
                    createdAt
                    description
                    forkCount
                    forkingAllowed
                    hasIssuesEnabled
                    hasProjectsEnabled
                    hasWikiEnabled
                    homepageUrl
                    id
                    isArchived
                    isBlankIssuesEnabled
                    isDisabled
                    isFork
                    isLocked
                    mergeCommitAllowed
                    mergeCommitTitle
                    mirrorUrl
                    name
                    openGraphImageUrl
                    projectsUrl
                    pushedAt
                    rebaseMergeAllowed
                    shortDescriptionHTML
                    squashMergeCommitMessage
                    squashMergeCommitTitle
                    stargazerCount
                    updatedAt
                    viewerCanCreateProjects
                    viewerCanSubscribe
                    viewerCanUpdateTopics
                    viewerHasStarred
                    viewerPossibleCommitEmails
                    visibility
                  }
                  submodules(first: $Commit__submodules__first) {
                    totalCount
                  }
                  abbreviatedOid
                  additions
                  authoredByCommitter
                  authoredDate
                  changedFiles
                  committedDate
                  committedViaWeb
                  id
                  messageBodyHTML
                  messageHeadlineHTML
                  pushedDate
                  resourcePath
                  url
                  viewerSubscription
                }
                description
                id
                isLatest
                isPrerelease
                publishedAt
                tagName
                url
                viewerCanReact
              }
              releases(first: $Repository__releases__first) {
                nodes {
                  releaseAssets(first: $Release__releaseAssets__first) {
                    totalCount
                  }
                  author {
                    anyPinnableItems
                    avatarUrl
                    bioHTML
                    canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                    company
                    databaseId
                    isDeveloperProgramMember
                    isHireable
                    isSiteAdmin
                    location
                    login
                    monthlyEstimatedSponsorsIncomeInCents
                    organizationVerifiedDomainEmails(login: $User__organizationVerifiedDomainEmails__login)
                    pinnedItemsRemaining
                    pronouns
                    totalSponsorshipAmountAsSponsorInCents
                    twitterUsername
                    updatedAt
                    url
                    viewerCanCreateProjects
                    viewerCanSponsor
                    viewerIsSponsoring
                    websiteUrl
                  }
                  reactionGroups {
                    content
                  }
                  tag {
                    id
                    prefix
                  }
                  id
                  isDraft
                  isPrerelease
                  resourcePath
                }
                totalCount
              }
              ruleset(databaseId: $Repository__ruleset__databaseId) {
                bypassActors(first: $RepositoryRuleset__bypassActors__first) {
                  pageInfo {
                    hasNextPage
                    hasPreviousPage
                  }
                  totalCount
                }
                conditions {
                  refName {
                    include
                  }
                  repositoryName {
                    include
                    protected
                  }
                }
                rules(first: $RepositoryRuleset__rules__first) {
                  nodes {
                    id
                  }
                  pageInfo {
                    hasPreviousPage
                  }
                }
                databaseId
                enforcement
                target
              }
              rulesets(first: $Repository__rulesets__first) {
                edges {
                  cursor
                }
                totalCount
              }
              submodules(first: $Repository__submodules__first) {
                edges {
                  node {
                    name
                    nameRaw
                  }
                }
                pageInfo {
                  hasNextPage
                  startCursor
                }
              }
              templateRepository {
                allowUpdateBranch
                autoMergeAllowed
                databaseId
                deleteBranchOnMerge
                description
                descriptionHTML
                hasDiscussionsEnabled
                hasSponsorshipsEnabled
                hasWikiEnabled
                id
                isBlankIssuesEnabled
                isMirror
                isSecurityPolicyEnabled
                isTemplate
                isUserConfigurationRepository
                name
                nameWithOwner
                projectsResourcePath
                projectsUrl
                rebaseMergeAllowed
                securityPolicyUrl
                squashMergeAllowed
                squashMergeCommitTitle
                sshUrl
                stargazerCount
                tempCloneToken
                url
                viewerCanAdminister
                viewerCanSubscribe
                visibility
                webCommitSignoffRequired
              }
              vulnerabilityAlert(number: $Repository__vulnerabilityAlert__number) {
                securityVulnerability {
                  firstPatchedVersion {
                    identifier
                  }
                  advisory {
                    databaseId
                    description
                    ghsaId
                    publishedAt
                    withdrawnAt
                  }
                }
                dismisser {
                  anyPinnableItems
                  avatarUrl
                  bio
                  bioHTML
                  canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                  email
                  estimatedNextSponsorsPayoutInCents
                  hasSponsorsListing
                  id
                  isBountyHunter
                  isCampusExpert
                  isDeveloperProgramMember
                  isFollowingViewer
                  isGitHubStar
                  isSiteAdmin
                  isViewer
                  login
                  monthlyEstimatedSponsorsIncomeInCents
                  projectsResourcePath
                  projectsUrl
                  totalSponsorshipAmountAsSponsorInCents
                  twitterUsername
                  viewerCanCreateProjects
                  viewerCanFollow
                  viewerIsSponsoring
                }
                repository {
                  ref(qualifiedName: $Repository__ref__qualifiedName) {
                    name
                    prefix
                  }
                  contactLinks {
                    name
                    url
                  }
                  defaultBranchRef {
                    id
                    name
                  }
                  deployKeys(first: $Repository__deployKeys__first) {
                    totalCount
                  }
                  discussionCategory(slug: $Repository__discussionCategory__slug) {
                    emoji
                    emojiHTML
                    name
                    slug
                  }
                  discussions(first: $Repository__discussions__first) {
                    totalCount
                  }
                  environments(first: $Repository__environments__first) {
                    totalCount
                  }
                  fundingLinks {
                    platform
                  }
                  interactionAbility {
                    origin
                  }
                  issue(number: $Repository__issue__number) {
                    bodyHTML
                    createdViaEmail
                    databaseId
                    includesCreatedEdit
                    lastEditedAt
                    locked
                    resourcePath
                    state
                    stateReason
                    titleHTML
                    url
                    viewerCanSubscribe
                    viewerCanUpdate
                    viewerThreadSubscriptionStatus
                  }
                  issueTemplates {
                    about
                    body
                    filename
                    title
                  }
                  label(name: $Repository__label__name) {
                    color
                    description
                    name
                    updatedAt
                  }
                  licenseInfo {
                    hidden
                    implementation
                    key
                    name
                    spdxId
                  }
                  parent {
                    allowUpdateBranch
                    archivedAt
                    autoMergeAllowed
                    createdAt
                    descriptionHTML
                    hasDiscussionsEnabled
                    hasIssuesEnabled
                    hasSponsorshipsEnabled
                    hasWikiEnabled
                    id
                    isDisabled
                    isLocked
                    isPrivate
                    isUserConfigurationRepository
                    mergeCommitAllowed
                    mergeCommitTitle
                    mirrorUrl
                    projectsResourcePath
                    pushedAt
                    rebaseMergeAllowed
                    shortDescriptionHTML
                    squashMergeCommitTitle
                    sshUrl
                    url
                    viewerCanAdminister
                    viewerHasStarred
                    visibility
                  }
                  pinnedIssues(first: $Repository__pinnedIssues__first) {
                    totalCount
                  }
                  primaryLanguage {
                    color
                    name
                  }
                  project(number: $Repository__project__number) {
                    closed
                    createdAt
                    number
                    state
                    updatedAt
                    viewerCanUpdate
                  }
                  projects(first: $Repository__projects__first) {
                    totalCount
                  }
                  pullRequest(number: $Repository__pullRequest__number) {
                    authorAssociation
                    baseRefName
                    baseRefOid
                    closedAt
                    createdViaEmail
                    headRefName
                    id
                    isCrossRepository
                    isInMergeQueue
                    isMergeQueueEnabled
                    isReadByViewer
                    lastEditedAt
                    locked
                    mergeable
                    mergedAt
                    mergeStateStatus
                    permalink
                    title
                    viewerCanDisableAutoMerge
                    viewerCanEditFiles
                    viewerCanLabel
                    viewerCannotUpdateReasons
                    viewerCanUpdate
                    viewerMergeBodyText
                    viewerSubscription
                  }
                  pullRequestTemplates {
                    filename
                  }
                  recentProjects(first: $Repository__recentProjects__first) {
                    totalCount
                  }
                  release(tagName: $Repository__release__tagName) {
                    databaseId
                    description
                    descriptionHTML
                    isPrerelease
                    publishedAt
                    resourcePath
                    shortDescriptionHTML
                    tagName
                    updatedAt
                    url
                  }
                  ruleset(databaseId: $Repository__ruleset__databaseId) {
                    enforcement
                    updatedAt
                  }
                  rulesets(first: $Repository__rulesets__first) {
                    totalCount
                  }
                  submodules(first: $Repository__submodules__first) {
                    totalCount
                  }
                  templateRepository {
                    autoMergeAllowed
                    databaseId
                    deleteBranchOnMerge
                    diskUsage
                    forkCount
                    forkingAllowed
                    isArchived
                    isFork
                    isPrivate
                    isSecurityPolicyEnabled
                    isUserConfigurationRepository
                    mergeCommitAllowed
                    mergeCommitMessage
                    mergeCommitTitle
                    mirrorUrl
                    securityPolicyUrl
                    shortDescriptionHTML
                    squashMergeAllowed
                    squashMergeCommitMessage
                    tempCloneToken
                    url
                    usesCustomOpenGraphImage
                    viewerCanCreateProjects
                    viewerDefaultCommitEmail
                    viewerDefaultMergeMethod
                    viewerHasStarred
                    visibility
                    webCommitSignoffRequired
                  }
                  description
                  descriptionHTML
                  diskUsage
                  forkingAllowed
                  hasSponsorshipsEnabled
                  id
                  isDisabled
                  isLocked
                  isMirror
                  isPrivate
                  isUserConfigurationRepository
                  lockReason
                  mergeCommitAllowed
                  mergeCommitTitle
                  mirrorUrl
                  rebaseMergeAllowed
                  resourcePath
                  squashMergeAllowed
                  squashMergeCommitTitle
                  squashPrTitleUsedAsDefault
                  stargazerCount
                  url
                  usesCustomOpenGraphImage
                  viewerCanAdminister
                  viewerCanSubscribe
                  viewerDefaultCommitEmail
                  viewerDefaultMergeMethod
                  viewerPermission
                }
                securityAdvisory {
                  classification
                  databaseId
                  id
                  notificationsPermalink
                  publishedAt
                  updatedAt
                }
                dismissComment
                dismissReason
                number
                state
                vulnerableManifestFilename
                vulnerableRequirements
              }
              archivedAt
              description
              descriptionHTML
              diskUsage
              forkCount
              forkingAllowed
              hasSponsorshipsEnabled
              hasWikiEnabled
              id
              isArchived
              isFork
              isLocked
              isMirror
              isPrivate
              isSecurityPolicyEnabled
              isUserConfigurationRepository
              lockReason
              mergeCommitAllowed
              name
              nameWithOwner
              projectsResourcePath
              projectsUrl
              securityPolicyUrl
              shortDescriptionHTML
              squashMergeCommitMessage
              squashPrTitleUsedAsDefault
              stargazerCount
              tempCloneToken
              updatedAt
              url
              usesCustomOpenGraphImage
              viewerCanAdminister
              viewerCanCreateProjects
              viewerCanUpdateTopics
              viewerDefaultCommitEmail
              viewerDefaultMergeMethod
              viewerHasStarred
              viewerSubscription
              visibility
            }
            auditLog(first: $Organization__auditLog__first) {
              pageInfo {
                startCursor
              }
            }
            interactionAbility {
              limit
            }
            ipAllowListEntries(first: $Organization__ipAllowListEntries__first) {
              pageInfo {
                endCursor
                hasPreviousPage
              }
              totalCount
            }
            lifetimeReceivedSponsorshipValues(first: $Organization__lifetimeReceivedSponsorshipValues__first) {
              edges {
                node {
                  amountInCents
                  formattedAmount
                }
              }
            }
            mannequins(first: $Organization__mannequins__first) {
              totalCount
            }
            pendingMembers(first: $Organization__pendingMembers__first) {
              pageInfo {
                hasNextPage
              }
              nodes {
                sponsorshipForViewerAsSponsorable {
                  id
                  isOneTimePayment
                  isSponsorOptedIntoEmail
                  paymentSource
                  privacyLevel
                }
                copilotEndpoints {
                  proxy
                }
                enterprises(first: $User__enterprises__first) {
                  totalCount
                }
                following(first: $User__following__first) {
                  edges {
                    cursor
                  }
                }
                interactionAbility {
                  origin
                }
                itemShowcase {
                  hasPinnedItems
                }
                lifetimeReceivedSponsorshipValues(first: $User__lifetimeReceivedSponsorshipValues__first) {
                  totalCount
                }
                lists(first: $User__lists__first) {
                  nodes {
                    lastAddedAt
                    name
                    updatedAt
                  }
                }
                organization(login: $User__organization__login) {
                  packages(first: $Organization__packages__first) {
                    totalCount
                  }
                  auditLog(first: $Organization__auditLog__first) {
                    totalCount
                  }
                  domains(first: $Organization__domains__first) {
                    totalCount
                  }
                  enterpriseOwners(first: $Organization__enterpriseOwners__first) {
                    totalCount
                  }
                  ipAllowListEntries(first: $Organization__ipAllowListEntries__first) {
                    totalCount
                  }
                  lifetimeReceivedSponsorshipValues(first: $Organization__lifetimeReceivedSponsorshipValues__first) {
                    totalCount
                  }
                  mannequins(first: $Organization__mannequins__first) {
                    totalCount
                  }
                  membersWithRole(first: $Organization__membersWithRole__first) {
                    totalCount
                  }
                  pendingMembers(first: $Organization__pendingMembers__first) {
                    totalCount
                  }
                  pinnedItems(first: $Organization__pinnedItems__first) {
                    totalCount
                  }
                  project(number: $Organization__project__number) {
                    bodyHTML
                    closed
                    closedAt
                    createdAt
                    name
                    number
                    resourcePath
                    state
                    url
                    viewerCanUpdate
                  }
                  projects(first: $Organization__projects__first) {
                    totalCount
                  }
                  projectsV2(first: $Organization__projectsV2__first) {
                    totalCount
                  }
                  recentProjects(first: $Organization__recentProjects__first) {
                    totalCount
                  }
                  repository(name: $Organization__repository__name) {
                    autoMergeAllowed
                    createdAt
                    deleteBranchOnMerge
                    description
                    descriptionHTML
                    hasWikiEnabled
                    homepageUrl
                    id
                    isArchived
                    isBlankIssuesEnabled
                    isLocked
                    isPrivate
                    isUserConfigurationRepository
                    lockReason
                    mergeCommitAllowed
                    mergeCommitMessage
                    nameWithOwner
                    openGraphImageUrl
                    pushedAt
                    resourcePath
                    securityPolicyUrl
                    squashMergeCommitTitle
                    squashPrTitleUsedAsDefault
                    sshUrl
                    viewerCanAdminister
                    viewerCanCreateProjects
                    viewerCanSubscribe
                    viewerCanUpdateTopics
                    viewerDefaultMergeMethod
                    viewerPermission
                    viewerPossibleCommitEmails
                    viewerSubscription
                    visibility
                    webCommitSignoffRequired
                  }
                  repositoryDiscussionComments(first: $Organization__repositoryDiscussionComments__first) {
                    totalCount
                  }
                  repositoryDiscussions(first: $Organization__repositoryDiscussions__first) {
                    totalCount
                  }
                  sponsoring(first: $Organization__sponsoring__first) {
                    totalCount
                  }
                  sponsorshipForViewerAsSponsor {
                    createdAt
                    isSponsorOptedIntoEmail
                    tierSelectedAt
                  }
                  sponsorshipsAsMaintainer(first: $Organization__sponsorshipsAsMaintainer__first) {
                    totalRecurringMonthlyPriceInDollars
                  }
                  sponsorshipsAsSponsor(first: $Organization__sponsorshipsAsSponsor__first) {
                    totalCount
                    totalRecurringMonthlyPriceInCents
                  }
                  team(slug: $Organization__team__slug) {
                    avatarUrl
                    discussionsResourcePath
                    editTeamUrl
                    membersUrl
                    newTeamResourcePath
                    newTeamUrl
                    notificationSetting
                    resourcePath
                    reviewRequestDelegationAlgorithm
                    reviewRequestDelegationMemberCount
                    reviewRequestDelegationNotifyTeam
                    teamsResourcePath
                    updatedAt
                    url
                    viewerSubscription
                  }
                  announcementExpiresAt
                  anyPinnableItems
                  createdAt
                  description
                  descriptionHTML
                  email
                  estimatedNextSponsorsPayoutInCents
                  hasSponsorsListing
                  id
                  ipAllowListForInstalledAppsEnabledSetting
                  isSponsoredBy(accountLogin: $Organization__isSponsoredBy__accountLogin)
                  isSponsoringViewer
                  location
                  login
                  newTeamResourcePath
                  organizationBillingEmail
                  projectsResourcePath
                  projectsUrl
                  twitterUsername
                  updatedAt
                  viewerCanChangePinnedItems
                  viewerCanCreateRepositories
                  viewerIsAMember
                  viewerIsSponsoring
                  websiteUrl
                }
                packages(first: $User__packages__first) {
                  nodes {
                    name
                  }
                }
                projects(first: $User__projects__first) {
                  pageInfo {
                    hasNextPage
                  }
                  edges {
                    cursor
                  }
                }
                projectsV2(first: $User__projectsV2__first) {
                  totalCount
                }
                projectV2(number: $User__projectV2__number) {
                  repositories(first: $ProjectV2__repositories__first) {
                    totalCount
                  }
                  fields(first: $ProjectV2__fields__first) {
                    totalCount
                  }
                  teams(first: $ProjectV2__teams__first) {
                    totalCount
                  }
                  views(first: $ProjectV2__views__first) {
                    totalCount
                  }
                  workflow(number: $ProjectV2__workflow__number) {
                    databaseId
                    enabled
                    id
                    name
                    number
                    updatedAt
                  }
                  id
                  readme
                  resourcePath
                  template
                  updatedAt
                }
                recentProjects(first: $User__recentProjects__first) {
                  pageInfo {
                    hasNextPage
                  }
                  totalCount
                }
                repository(name: $User__repository__name) {
                  allowUpdateBranch
                  autoMergeAllowed
                  createdAt
                  databaseId
                  deleteBranchOnMerge
                  description
                  descriptionHTML
                  diskUsage
                  forkingAllowed
                  hasDiscussionsEnabled
                  hasProjectsEnabled
                  hasSponsorshipsEnabled
                  homepageUrl
                  id
                  isBlankIssuesEnabled
                  isDisabled
                  isLocked
                  isMirror
                  isPrivate
                  isTemplate
                  isUserConfigurationRepository
                  lockReason
                  mirrorUrl
                  name
                  openGraphImageUrl
                  projectsResourcePath
                  projectsUrl
                  resourcePath
                  securityPolicyUrl
                  sshUrl
                  tempCloneToken
                  updatedAt
                  usesCustomOpenGraphImage
                  viewerCanAdminister
                  viewerCanSubscribe
                  viewerCanUpdateTopics
                  viewerDefaultMergeMethod
                  viewerHasStarred
                  viewerPermission
                  visibility
                  webCommitSignoffRequired
                }
                repositoryDiscussionComments(first: $User__repositoryDiscussionComments__first) {
                  edges {
                    cursor
                  }
                  pageInfo {
                    endCursor
                  }
                  totalCount
                }
                socialAccounts(first: $User__socialAccounts__first) {
                  totalCount
                }
                sponsors(first: $User__sponsors__first) {
                  totalCount
                }
                sponsorsActivities(first: $User__sponsorsActivities__first) {
                  pageInfo {
                    endCursor
                    hasNextPage
                    startCursor
                  }
                  edges {
                    cursor
                  }
                  nodes {
                    paymentSource
                  }
                }
                sponsorshipNewsletters(first: $User__sponsorshipNewsletters__first) {
                  nodes {
                    body
                    createdAt
                    id
                    isPublished
                    updatedAt
                  }
                }
                sponsorsListing {
                  contactEmailAddress
                  dashboardResourcePath
                  fullDescription
                  fullDescriptionHTML
                  id
                  name
                  nextPayoutDate
                  slug
                }
                status {
                  organization {
                    announcement
                    announcementCreatedAt
                    announcementUserDismissible
                    anyPinnableItems
                    createdAt
                    description
                    email
                    ipAllowListEnabledSetting
                    isSponsoredBy(accountLogin: $Organization__isSponsoredBy__accountLogin)
                    isSponsoringViewer
                    isVerified
                    login
                    name
                    newTeamResourcePath
                    newTeamUrl
                    notificationDeliveryRestrictionEnabledSetting
                    organizationBillingEmail
                    pinnedItemsRemaining
                    projectsResourcePath
                    projectsUrl
                    requiresTwoFactorAuthentication
                    resourcePath
                    totalSponsorshipAmountAsSponsorInCents
                    twitterUsername
                    viewerCanChangePinnedItems
                    viewerCanCreateTeams
                    viewerCanSponsor
                    viewerIsAMember
                    webCommitSignoffRequired
                  }
                  emojiHTML
                  indicatesLimitedAvailability
                  message
                }
                topRepositories(first: $User__topRepositories__first, orderBy: $User__topRepositories__orderBy) {
                  nodes {
                    allowUpdateBranch
                    autoMergeAllowed
                    createdAt
                    deleteBranchOnMerge
                    hasDiscussionsEnabled
                    hasWikiEnabled
                    isBlankIssuesEnabled
                    isEmpty
                    isInOrganization
                    isPrivate
                    isSecurityPolicyEnabled
                    isTemplate
                    isUserConfigurationRepository
                    lockReason
                    nameWithOwner
                    openGraphImageUrl
                    rebaseMergeAllowed
                    resourcePath
                    securityPolicyUrl
                    squashMergeAllowed
                    squashMergeCommitMessage
                    squashMergeCommitTitle
                    squashPrTitleUsedAsDefault
                    sshUrl
                    stargazerCount
                    updatedAt
                    usesCustomOpenGraphImage
                    viewerSubscription
                    visibility
                  }
                  pageInfo {
                    endCursor
                    startCursor
                  }
                  totalDiskUsage
                }
                watching(first: $User__watching__first) {
                  nodes {
                    autoMergeAllowed
                    createdAt
                    deleteBranchOnMerge
                    hasDiscussionsEnabled
                    hasProjectsEnabled
                    hasVulnerabilityAlertsEnabled
                    hasWikiEnabled
                    isBlankIssuesEnabled
                    isTemplate
                    isUserConfigurationRepository
                    mergeCommitAllowed
                    mergeCommitMessage
                    name
                    nameWithOwner
                    projectsUrl
                    rebaseMergeAllowed
                    shortDescriptionHTML
                    squashMergeAllowed
                    squashMergeCommitTitle
                    squashPrTitleUsedAsDefault
                    stargazerCount
                    url
                    viewerCanSubscribe
                    viewerCanUpdateTopics
                    viewerDefaultCommitEmail
                    viewerDefaultMergeMethod
                    viewerPermission
                    viewerSubscription
                  }
                  pageInfo {
                    hasPreviousPage
                  }
                  totalCount
                  totalDiskUsage
                }
                anyPinnableItems
                bio
                bioHTML
                canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                isBountyHunter
                isEmployee
                isFollowingViewer
                isSiteAdmin
                isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                isViewer
                projectsUrl
                pronouns
                totalSponsorshipAmountAsSponsorInCents
                twitterUsername
                updatedAt
                userViewType
                viewerCanChangePinnedItems
                viewerCanCreateProjects
                viewerCanFollow
                viewerCanSponsor
                viewerIsFollowing
              }
            }
            pinnableItems(first: $Organization__pinnableItems__first) {
              pageInfo {
                endCursor
              }
            }
            projects(first: $Organization__projects__first) {
              edges {
                node {
                  body
                  closedAt
                  createdAt
                  databaseId
                  id
                  name
                  number
                  updatedAt
                  viewerCanClose
                  viewerCanReopen
                }
              }
              totalCount
            }
            repositories(first: $Organization__repositories__first) {
              totalCount
            }
            repositoryMigrations(first: $Organization__repositoryMigrations__first) {
              pageInfo {
                endCursor
                hasNextPage
                startCursor
              }
              edges {
                cursor
              }
            }
            ruleset(databaseId: $Organization__ruleset__databaseId) {
              bypassActors(first: $RepositoryRuleset__bypassActors__first) {
                totalCount
              }
              conditions {
                repositoryProperty {
                  exclude {
                    name
                  }
                }
                repositoryId {
                  repositoryIds
                }
                repositoryName {
                  include
                }
              }
              createdAt
              databaseId
              id
              target
            }
            rulesets(first: $Organization__rulesets__first) {
              totalCount
            }
            sponsors(first: $Organization__sponsors__first) {
              pageInfo {
                endCursor
                hasNextPage
                hasPreviousPage
                startCursor
              }
              edges {
                cursor
              }
            }
            sponsorsActivities(first: $Organization__sponsorsActivities__first) {
              pageInfo {
                endCursor
                hasPreviousPage
                startCursor
              }
              nodes {
                previousSponsorsTier {
                  sponsorsListing {
                    billingCountryOrRegion
                    contactEmailAddress
                    fullDescriptionHTML
                    name
                    nextPayoutDate
                    residenceCountryOrRegion
                    resourcePath
                    slug
                    url
                  }
                  adminInfo {
                    isPublished
                    isRetired
                  }
                  closestLesserValueTier {
                    description
                    descriptionHTML
                    isCustomAmount
                    updatedAt
                  }
                  descriptionHTML
                  id
                  monthlyPriceInDollars
                  name
                }
                action
                id
                paymentSource
              }
              totalCount
            }
            sponsorshipForViewerAsSponsor {
              maintainer {
                anyPinnableItems
                bio
                canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                createdAt
                databaseId
                email
                id
                isBountyHunter
                isDeveloperProgramMember
                isFollowingViewer
                isHireable
                isSiteAdmin
                isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                isSponsoringViewer
                name
                organizationVerifiedDomainEmails(login: $User__organizationVerifiedDomainEmails__login)
                pinnedItemsRemaining
                projectsUrl
                resourcePath
                updatedAt
                viewerCanChangePinnedItems
                viewerCanCreateProjects
                viewerCanFollow
                viewerIsFollowing
                viewerIsSponsoring
              }
              sponsor {
                bio
                canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                company
                createdAt
                email
                hasSponsorsListing
                id
                isDeveloperProgramMember
                isEmployee
                isFollowingViewer
                isGitHubStar
                isHireable
                isSiteAdmin
                isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                isSponsoringViewer
                location
                login
                monthlyEstimatedSponsorsIncomeInCents
                name
                projectsResourcePath
                projectsUrl
                pronouns
                resourcePath
                twitterUsername
                viewerCanFollow
                viewerIsFollowing
                viewerIsSponsoring
              }
              tier {
                createdAt
                id
                isCustomAmount
                name
                updatedAt
              }
              id
              isActive
              isOneTimePayment
              paymentSource
              privacyLevel
              tierSelectedAt
            }
            sponsorshipForViewerAsSponsorable {
              createdAt
              id
              isSponsorOptedIntoEmail
              paymentSource
            }
            sponsorshipsAsMaintainer(first: $Organization__sponsorshipsAsMaintainer__first) {
              totalRecurringMonthlyPriceInCents
              totalRecurringMonthlyPriceInDollars
            }
            sponsorsListing {
              activeGoal {
                percentComplete
                targetValue
                title
              }
              billingCountryOrRegion
              dashboardResourcePath
              dashboardUrl
              fullDescriptionHTML
              id
              name
              nextPayoutDate
              resourcePath
              shortDescription
              slug
              url
            }
            team(slug: $Organization__team__slug) {
              organization {
                sponsorshipsAsSponsor(first: $Organization__sponsorshipsAsSponsor__first) {
                  totalRecurringMonthlyPriceInDollars
                }
                enterpriseOwners(first: $Organization__enterpriseOwners__first) {
                  nodes {
                    anyPinnableItems
                    bio
                    bioHTML
                    company
                    companyHTML
                    createdAt
                    databaseId
                    email
                    estimatedNextSponsorsPayoutInCents
                    isDeveloperProgramMember
                    isEmployee
                    isGitHubStar
                    isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                    isSponsoringViewer
                    isViewer
                    location
                    monthlyEstimatedSponsorsIncomeInCents
                    pinnedItemsRemaining
                    resourcePath
                    totalSponsorshipAmountAsSponsorInCents
                    twitterUsername
                    updatedAt
                    userViewType
                    viewerCanChangePinnedItems
                    viewerCanCreateProjects
                    viewerCanFollow
                    viewerCanSponsor
                    viewerIsSponsoring
                    websiteUrl
                  }
                  edges {
                    cursor
                  }
                }
                ipAllowListEntries(first: $Organization__ipAllowListEntries__first) {
                  totalCount
                }
                memberStatuses(first: $Organization__memberStatuses__first) {
                  totalCount
                }
                pinnableItems(first: $Organization__pinnableItems__first) {
                  totalCount
                }
                pinnedItems(first: $Organization__pinnedItems__first) {
                  totalCount
                }
                project(number: $Organization__project__number) {
                  body
                  closedAt
                  resourcePath
                  updatedAt
                  viewerCanReopen
                  viewerCanUpdate
                }
                projectsV2(first: $Organization__projectsV2__first) {
                  edges {
                    cursor
                  }
                  nodes {
                    createdAt
                    databaseId
                    fullDatabaseId
                    id
                    public
                    template
                    updatedAt
                    viewerCanReopen
                  }
                  pageInfo {
                    endCursor
                    hasNextPage
                    hasPreviousPage
                  }
                }
                projectV2(number: $Organization__projectV2__number) {
                  items(first: $ProjectV2__items__first) {
                    totalCount
                  }
                  fields(first: $ProjectV2__fields__first) {
                    totalCount
                  }
                  repositories(first: $ProjectV2__repositories__first) {
                    totalDiskUsage
                  }
                  teams(first: $ProjectV2__teams__first) {
                    totalCount
                  }
                  views(first: $ProjectV2__views__first) {
                    totalCount
                  }
                  closed
                  createdAt
                  databaseId
                  public
                  readme
                  shortDescription
                  template
                  title
                  viewerCanClose
                  viewerCanUpdate
                }
                repositoryDiscussionComments(first: $Organization__repositoryDiscussionComments__first) {
                  nodes {
                    authorAssociation
                    bodyHTML
                    bodyText
                    createdAt
                    databaseId
                    includesCreatedEdit
                    isAnswer
                    isMinimized
                    publishedAt
                    resourcePath
                    upvoteCount
                    url
                    viewerCanDelete
                    viewerCannotUpdateReasons
                    viewerCanUnmarkAsAnswer
                    viewerCanUpdate
                    viewerCanUpvote
                  }
                  edges {
                    cursor
                  }
                  pageInfo {
                    hasPreviousPage
                  }
                }
                ruleset(databaseId: $Organization__ruleset__databaseId) {
                  createdAt
                  enforcement
                  id
                  updatedAt
                }
                rulesets(first: $Organization__rulesets__first) {
                  nodes {
                    createdAt
                    id
                    updatedAt
                  }
                  totalCount
                }
                sponsorshipForViewerAsSponsor {
                  sponsor {
                    avatarUrl
                    bio
                    bioHTML
                    createdAt
                    estimatedNextSponsorsPayoutInCents
                    hasSponsorsListing
                    isEmployee
                    isSiteAdmin
                    isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                    pinnedItemsRemaining
                    projectsUrl
                    totalSponsorshipAmountAsSponsorInCents
                    updatedAt
                    viewerCanChangePinnedItems
                    viewerCanSponsor
                    websiteUrl
                  }
                  tier {
                    createdAt
                    descriptionHTML
                    id
                    isOneTime
                    monthlyPriceInCents
                    monthlyPriceInDollars
                    updatedAt
                  }
                  id
                  isActive
                  paymentSource
                  tierSelectedAt
                }
                sponsorshipsAsMaintainer(first: $Organization__sponsorshipsAsMaintainer__first) {
                  nodes {
                    isActive
                    isOneTimePayment
                    isSponsorOptedIntoEmail
                    paymentSource
                    privacyLevel
                  }
                  edges {
                    cursor
                  }
                  pageInfo {
                    endCursor
                    hasPreviousPage
                  }
                  totalRecurringMonthlyPriceInCents
                }
                sponsorsListing {
                  activeGoal {
                    description
                    percentComplete
                  }
                  activeStripeConnectAccount {
                    accountId
                    billingCountryOrRegion
                    isActive
                  }
                  featuredItems {
                    position
                    updatedAt
                  }
                  tiers(first: $SponsorsListing__tiers__first) {
                    totalCount
                  }
                  billingCountryOrRegion
                  createdAt
                  id
                  nextPayoutDate
                  residenceCountryOrRegion
                  resourcePath
                  shortDescription
                  slug
                }
                announcementCreatedAt
                anyPinnableItems
                descriptionHTML
                email
                estimatedNextSponsorsPayoutInCents
                ipAllowListForInstalledAppsEnabledSetting
                isSponsoredBy(accountLogin: $Organization__isSponsoredBy__accountLogin)
                isSponsoringViewer
                login
                monthlyEstimatedSponsorsIncomeInCents
                name
                projectsResourcePath
                projectsUrl
                resourcePath
                updatedAt
                url
                viewerCanChangePinnedItems
                viewerCanCreateProjects
                viewerIsFollowing
                webCommitSignoffRequired
              }
              childTeams(first: $Team__childTeams__first) {
                edges {
                  node {
                    combinedSlug
                    createdAt
                    discussionsUrl
                    editTeamUrl
                    id
                    membersResourcePath
                    membersUrl
                    newTeamUrl
                    notificationSetting
                    privacy
                    resourcePath
                    reviewRequestDelegationAlgorithm
                    reviewRequestDelegationEnabled
                    reviewRequestDelegationNotifyTeam
                    slug
                    teamsUrl
                    updatedAt
                    url
                    viewerCanAdminister
                    viewerCanSubscribe
                    viewerSubscription
                  }
                }
                pageInfo {
                  hasNextPage
                }
                totalCount
              }
              discussions(first: $Team__discussions__first) {
                totalCount
              }
              invitations(first: $Team__invitations__first) {
                pageInfo {
                  hasNextPage
                  hasPreviousPage
                }
                nodes {
                  createdAt
                  email
                  id
                  invitationSource
                }
                totalCount
              }
              members(first: $Team__members__first) {
                nodes {
                  copilotEndpoints {
                    originTracker
                    telemetry
                  }
                  commitComments(first: $User__commitComments__first) {
                    totalCount
                  }
                  enterprises(first: $User__enterprises__first) {
                    totalCount
                  }
                  gist(name: $User__gist__name) {
                    id
                    isPublic
                  }
                  gistComments(first: $User__gistComments__first) {
                    totalCount
                  }
                  gists(first: $User__gists__first) {
                    totalCount
                  }
                  issues(first: $User__issues__first) {
                    totalCount
                  }
                  itemShowcase {
                    hasPinnedItems
                  }
                  lifetimeReceivedSponsorshipValues(first: $User__lifetimeReceivedSponsorshipValues__first) {
                    totalCount
                  }
                  lists(first: $User__lists__first) {
                    totalCount
                  }
                  organization(login: $User__organization__login) {
                    announcement
                    anyPinnableItems
                    createdAt
                    estimatedNextSponsorsPayoutInCents
                    id
                    ipAllowListForInstalledAppsEnabledSetting
                    isSponsoredBy(accountLogin: $Organization__isSponsoredBy__accountLogin)
                    isSponsoringViewer
                    membersCanForkPrivateRepositories
                    name
                    notificationDeliveryRestrictionEnabledSetting
                    pinnedItemsRemaining
                    requiresTwoFactorAuthentication
                    resourcePath
                    twitterUsername
                    viewerCanAdminister
                    viewerCanCreateProjects
                    viewerCanSponsor
                    viewerIsSponsoring
                    webCommitSignoffRequired
                  }
                  organizations(first: $User__organizations__first) {
                    totalCount
                  }
                  packages(first: $User__packages__first) {
                    totalCount
                  }
                  pinnableItems(first: $User__pinnableItems__first) {
                    totalCount
                  }
                  projects(first: $User__projects__first) {
                    totalCount
                  }
                  projectsV2(first: $User__projectsV2__first) {
                    totalCount
                  }
                  pullRequests(first: $User__pullRequests__first) {
                    totalCount
                  }
                  repositories(first: $User__repositories__first) {
                    totalDiskUsage
                  }
                  repositoryDiscussionComments(first: $User__repositoryDiscussionComments__first) {
                    totalCount
                  }
                  repositoryDiscussions(first: $User__repositoryDiscussions__first) {
                    totalCount
                  }
                  sponsoring(first: $User__sponsoring__first) {
                    totalCount
                  }
                  sponsors(first: $User__sponsors__first) {
                    totalCount
                  }
                  sponsorshipForViewerAsSponsorable {
                    createdAt
                    id
                    isActive
                    privacyLevel
                    tierSelectedAt
                  }
                  sponsorshipsAsSponsor(first: $User__sponsorshipsAsSponsor__first) {
                    totalCount
                    totalRecurringMonthlyPriceInCents
                  }
                  sponsorsListing {
                    contactEmailAddress
                    fullDescription
                    id
                    slug
                    url
                  }
                  status {
                    createdAt
                    emoji
                    expiresAt
                    updatedAt
                  }
                  topRepositories(first: $User__topRepositories__first, orderBy: $User__topRepositories__orderBy) {
                    totalDiskUsage
                  }
                  watching(first: $User__watching__first) {
                    totalCount
                    totalDiskUsage
                  }
                  anyPinnableItems
                  avatarUrl
                  bio
                  company
                  createdAt
                  email
                  isBountyHunter
                  isCampusExpert
                  isDeveloperProgramMember
                  isHireable
                  isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                  login
                  monthlyEstimatedSponsorsIncomeInCents
                  projectsUrl
                  pronouns
                  totalSponsorshipAmountAsSponsorInCents
                  twitterUsername
                  viewerCanSponsor
                  viewerIsFollowing
                  viewerIsSponsoring
                  websiteUrl
                }
                edges {
                  node {
                    bio
                    canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                    createdAt
                    databaseId
                    email
                    id
                    isCampusExpert
                    isEmployee
                    isHireable
                    isSiteAdmin
                    isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                    isViewer
                    login
                    monthlyEstimatedSponsorsIncomeInCents
                    name
                    organizationVerifiedDomainEmails(login: $User__organizationVerifiedDomainEmails__login)
                    pronouns
                    resourcePath
                    totalSponsorshipAmountAsSponsorInCents
                    updatedAt
                    userViewType
                    viewerCanSponsor
                    viewerIsFollowing
                  }
                  cursor
                  role
                }
                totalCount
              }
              memberStatuses(first: $Team__memberStatuses__first) {
                pageInfo {
                  hasNextPage
                  startCursor
                }
                nodes {
                  emoji
                  expiresAt
                  message
                  updatedAt
                }
                totalCount
              }
              avatarUrl
              createdAt
              discussionsResourcePath
              discussionsUrl
              membersUrl
              newTeamResourcePath
              notificationSetting
              repositoriesUrl
              resourcePath
              reviewRequestDelegationEnabled
              reviewRequestDelegationNotifyTeam
              slug
              teamsResourcePath
              teamsUrl
              updatedAt
              url
              viewerCanAdminister
              viewerSubscription
            }
            announcement
            announcementCreatedAt
            archivedAt
            avatarUrl
            createdAt
            databaseId
            description
            email
            estimatedNextSponsorsPayoutInCents
            hasSponsorsListing
            id
            ipAllowListEnabledSetting
            ipAllowListForInstalledAppsEnabledSetting
            isSponsoringViewer
            location
            membersCanForkPrivateRepositories
            name
            newTeamUrl
            notificationDeliveryRestrictionEnabledSetting
            pinnedItemsRemaining
            teamsResourcePath
            teamsUrl
            totalSponsorshipAmountAsSponsorInCents
            url
            viewerCanCreateProjects
            viewerCanCreateTeams
            viewerCanSponsor
            viewerIsAMember
          }
          totalCount
        }
        membersCanDeleteIssuesSettingOrganizations(first: $EnterpriseOwnerInfo__membersCanDeleteIssuesSettingOrganizations__first, value: $EnterpriseOwnerInfo__membersCanDeleteIssuesSettingOrganizations__value) {
          edges {
            node {
              sponsors(first: $Organization__sponsors__first) {
                totalCount
              }
              domains(first: $Organization__domains__first) {
                pageInfo {
                  startCursor
                }
                edges {
                  cursor
                }
                nodes {
                  createdAt
                  domain
                  id
                  isApproved
                  isVerified
                  punycodeEncodedDomain
                }
              }
              ipAllowListEntries(first: $Organization__ipAllowListEntries__first) {
                edges {
                  node {
                    createdAt
                    id
                    name
                  }
                }
                pageInfo {
                  endCursor
                }
                totalCount
              }
              itemShowcase {
                items(first: $ProfileItemShowcase__items__first) {
                  edges {
                    cursor
                  }
                  pageInfo {
                    hasNextPage
                  }
                  totalCount
                }
              }
              mannequins(first: $Organization__mannequins__first) {
                nodes {
                  createdAt
                  id
                  login
                  resourcePath
                  url
                }
                edges {
                  cursor
                }
                pageInfo {
                  hasPreviousPage
                }
                totalCount
              }
              membersWithRole(first: $Organization__membersWithRole__first) {
                totalCount
              }
              projects(first: $Organization__projects__first) {
                edges {
                  node {
                    bodyHTML
                    closedAt
                    databaseId
                    id
                    viewerCanClose
                    viewerCanReopen
                  }
                  cursor
                }
                totalCount
              }
              projectsV2(first: $Organization__projectsV2__first) {
                totalCount
              }
              projectV2(number: $Organization__projectV2__number) {
                views(first: $ProjectV2__views__first) {
                  totalCount
                }
                fields(first: $ProjectV2__fields__first) {
                  edges {
                    cursor
                  }
                }
                repositories(first: $ProjectV2__repositories__first) {
                  nodes {
                    archivedAt
                    autoMergeAllowed
                    deleteBranchOnMerge
                    diskUsage
                    forkCount
                    forkingAllowed
                    hasDiscussionsEnabled
                    hasProjectsEnabled
                    hasVulnerabilityAlertsEnabled
                    hasWikiEnabled
                    isArchived
                    isBlankIssuesEnabled
                    isEmpty
                    isFork
                    isInOrganization
                    isTemplate
                    lockReason
                    mergeCommitMessage
                    mergeCommitTitle
                    mirrorUrl
                    openGraphImageUrl
                    projectsResourcePath
                    projectsUrl
                    resourcePath
                    shortDescriptionHTML
                    squashMergeAllowed
                    squashMergeCommitTitle
                    sshUrl
                    stargazerCount
                    url
                    usesCustomOpenGraphImage
                    viewerCanAdminister
                    viewerCanCreateProjects
                    viewerDefaultCommitEmail
                    viewerPossibleCommitEmails
                    viewerSubscription
                  }
                  edges {
                    cursor
                  }
                  pageInfo {
                    startCursor
                  }
                  totalDiskUsage
                }
                view(number: $ProjectV2__view__number) {
                  createdAt
                  fullDatabaseId
                  id
                  number
                  updatedAt
                }
                workflow(number: $ProjectV2__workflow__number) {
                  project {
                    closed
                    closedAt
                    id
                    number
                    public
                    template
                    title
                    url
                    viewerCanReopen
                    viewerCanUpdate
                  }
                  databaseId
                  enabled
                  fullDatabaseId
                  updatedAt
                }
                closed
                closedAt
                createdAt
                databaseId
                fullDatabaseId
                number
                public
                readme
                shortDescription
                template
                title
                updatedAt
                url
                viewerCanReopen
                viewerCanUpdate
              }
              recentProjects(first: $Organization__recentProjects__first) {
                nodes {
                  createdAt
                  fullDatabaseId
                  number
                  public
                  resourcePath
                  title
                  updatedAt
                  viewerCanClose
                }
                pageInfo {
                  hasNextPage
                  startCursor
                }
                totalCount
              }
              repositories(first: $Organization__repositories__first) {
                pageInfo {
                  endCursor
                  hasNextPage
                }
                edges {
                  node {
                    allowUpdateBranch
                    archivedAt
                    autoMergeAllowed
                    createdAt
                    description
                    descriptionHTML
                    diskUsage
                    forkingAllowed
                    hasSponsorshipsEnabled
                    hasVulnerabilityAlertsEnabled
                    isBlankIssuesEnabled
                    isDisabled
                    isEmpty
                    isInOrganization
                    isLocked
                    isMirror
                    isPrivate
                    isSecurityPolicyEnabled
                    isUserConfigurationRepository
                    mergeCommitAllowed
                    mergeCommitTitle
                    mirrorUrl
                    name
                    nameWithOwner
                    openGraphImageUrl
                    rebaseMergeAllowed
                    securityPolicyUrl
                    squashMergeCommitMessage
                    squashPrTitleUsedAsDefault
                    sshUrl
                    tempCloneToken
                    updatedAt
                    url
                    viewerCanAdminister
                    viewerCanCreateProjects
                    viewerCanSubscribe
                    viewerHasStarred
                    viewerPermission
                    visibility
                  }
                }
                nodes {
                  archivedAt
                  createdAt
                  deleteBranchOnMerge
                  description
                  descriptionHTML
                  diskUsage
                  forkCount
                  hasDiscussionsEnabled
                  hasIssuesEnabled
                  hasProjectsEnabled
                  hasSponsorshipsEnabled
                  homepageUrl
                  isBlankIssuesEnabled
                  isDisabled
                  isFork
                  isInOrganization
                  isLocked
                  isPrivate
                  isTemplate
                  mergeCommitAllowed
                  mergeCommitTitle
                  openGraphImageUrl
                  projectsResourcePath
                  projectsUrl
                  rebaseMergeAllowed
                  securityPolicyUrl
                  shortDescriptionHTML
                  squashMergeCommitMessage
                  usesCustomOpenGraphImage
                  viewerCanAdminister
                  viewerCanCreateProjects
                  viewerCanSubscribe
                  viewerDefaultCommitEmail
                  viewerDefaultMergeMethod
                  viewerPermission
                  viewerPossibleCommitEmails
                  visibility
                  webCommitSignoffRequired
                }
                totalDiskUsage
              }
              repositoryDiscussions(first: $Organization__repositoryDiscussions__first) {
                totalCount
              }
              repositoryMigrations(first: $Organization__repositoryMigrations__first) {
                edges {
                  cursor
                }
              }
              ruleset(databaseId: $Organization__ruleset__databaseId) {
                bypassActors(first: $RepositoryRuleset__bypassActors__first) {
                  pageInfo {
                    hasNextPage
                    startCursor
                  }
                  edges {
                    cursor
                  }
                  nodes {
                    deployKey
                    enterpriseOwner
                    id
                    repositoryRoleDatabaseId
                  }
                }
                rules(first: $RepositoryRuleset__rules__first) {
                  edges {
                    cursor
                  }
                  pageInfo {
                    endCursor
                    hasPreviousPage
                  }
                  totalCount
                }
                databaseId
                enforcement
                name
                target
                updatedAt
              }
              sponsoring(first: $Organization__sponsoring__first) {
                pageInfo {
                  startCursor
                }
                edges {
                  cursor
                }
                totalCount
              }
              sponsorsActivities(first: $Organization__sponsorsActivities__first) {
                pageInfo {
                  hasNextPage
                  startCursor
                }
                edges {
                  node {
                    action
                  }
                }
                nodes {
                  action
                  currentPrivacyLevel
                  viaBulkSponsorship
                }
              }
              sponsorshipForViewerAsSponsor {
                createdAt
                id
                isOneTimePayment
                isSponsorOptedIntoEmail
                paymentSource
              }
              sponsorshipForViewerAsSponsorable {
                createdAt
                isOneTimePayment
                isSponsorOptedIntoEmail
                paymentSource
              }
              sponsorshipNewsletters(first: $Organization__sponsorshipNewsletters__first) {
                edges {
                  node {
                    body
                    createdAt
                    id
                  }
                  cursor
                }
                pageInfo {
                  endCursor
                  hasNextPage
                  startCursor
                }
                totalCount
              }
              sponsorsListing {
                dashboardResourcePath
                dashboardUrl
                fullDescriptionHTML
                isPublic
                name
                slug
                url
              }
              announcement
              announcementUserDismissible
              archivedAt
              createdAt
              description
              descriptionHTML
              estimatedNextSponsorsPayoutInCents
              isSponsoredBy(accountLogin: $Organization__isSponsoredBy__accountLogin)
              isVerified
              membersCanForkPrivateRepositories
              monthlyEstimatedSponsorsIncomeInCents
              name
              newTeamResourcePath
              newTeamUrl
              organizationBillingEmail
              pinnedItemsRemaining
              projectsUrl
              requiresTwoFactorAuthentication
              totalSponsorshipAmountAsSponsorInCents
              twitterUsername
              viewerCanChangePinnedItems
              viewerCanCreateProjects
              viewerCanCreateRepositories
              webCommitSignoffRequired
              websiteUrl
            }
          }
          nodes {
            announcement
            announcementCreatedAt
            announcementExpiresAt
            announcementUserDismissible
            archivedAt
            avatarUrl
            descriptionHTML
            hasSponsorsListing
            ipAllowListEnabledSetting
            name
            newTeamUrl
            notificationDeliveryRestrictionEnabledSetting
            organizationBillingEmail
            pinnedItemsRemaining
            requiresTwoFactorAuthentication
            twitterUsername
            url
            viewerCanCreateProjects
            viewerCanCreateTeams
            viewerIsFollowing
            viewerIsSponsoring
          }
          pageInfo {
            hasPreviousPage
            startCursor
          }
          totalCount
        }
        membersCanUpdateProtectedBranchesSettingOrganizations(first: $EnterpriseOwnerInfo__membersCanUpdateProtectedBranchesSettingOrganizations__first, value: $EnterpriseOwnerInfo__membersCanUpdateProtectedBranchesSettingOrganizations__value) {
          pageInfo {
            hasNextPage
            startCursor
          }
        }
        membersCanViewDependencyInsightsSettingOrganizations(first: $EnterpriseOwnerInfo__membersCanViewDependencyInsightsSettingOrganizations__first, value: $EnterpriseOwnerInfo__membersCanViewDependencyInsightsSettingOrganizations__value) {
          totalCount
        }
        organizationProjectsSettingOrganizations(first: $EnterpriseOwnerInfo__organizationProjectsSettingOrganizations__first, value: $EnterpriseOwnerInfo__organizationProjectsSettingOrganizations__value) {
          edges {
            node {
              announcement
              announcementCreatedAt
              announcementUserDismissible
              anyPinnableItems
              archivedAt
              avatarUrl
              databaseId
              description
              descriptionHTML
              ipAllowListForInstalledAppsEnabledSetting
              isSponsoringViewer
              location
              login
              membersCanForkPrivateRepositories
              monthlyEstimatedSponsorsIncomeInCents
              newTeamUrl
              notificationDeliveryRestrictionEnabledSetting
              organizationBillingEmail
              pinnedItemsRemaining
              resourcePath
              teamsResourcePath
              totalSponsorshipAmountAsSponsorInCents
              updatedAt
              url
              viewerCanAdminister
              viewerCanChangePinnedItems
              viewerCanCreateProjects
              viewerCanCreateRepositories
              viewerCanSponsor
            }
            cursor
          }
        }
        pendingAdminInvitations(first: $EnterpriseOwnerInfo__pendingAdminInvitations__first) {
          edges {
            node {
              email
            }
          }
          pageInfo {
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
          }
          totalCount
        }
        pendingUnaffiliatedMemberInvitations(first: $EnterpriseOwnerInfo__pendingUnaffiliatedMemberInvitations__first) {
          edges {
            node {
              createdAt
              id
            }
            cursor
          }
          nodes {
            invitee {
              avatarUrl
              canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
              createdAt
              estimatedNextSponsorsPayoutInCents
              hasSponsorsListing
              id
              isDeveloperProgramMember
              isEmployee
              isGitHubStar
              isHireable
              isSiteAdmin
              isViewer
              location
              login
              monthlyEstimatedSponsorsIncomeInCents
              organizationVerifiedDomainEmails(login: $User__organizationVerifiedDomainEmails__login)
              projectsUrl
              pronouns
              resourcePath
              totalSponsorshipAmountAsSponsorInCents
              url
              userViewType
              viewerCanFollow
              viewerCanSponsor
              viewerIsSponsoring
            }
          }
          pageInfo {
            hasPreviousPage
          }
          totalCount
        }
        samlIdentityProviderSettingOrganizations(first: $EnterpriseOwnerInfo__samlIdentityProviderSettingOrganizations__first, value: $EnterpriseOwnerInfo__samlIdentityProviderSettingOrganizations__value) {
          totalCount
        }
        supportEntitlements(first: $EnterpriseOwnerInfo__supportEntitlements__first) {
          totalCount
        }
        teamDiscussionsSettingOrganizations(first: $EnterpriseOwnerInfo__teamDiscussionsSettingOrganizations__first, value: $EnterpriseOwnerInfo__teamDiscussionsSettingOrganizations__value) {
          edges {
            node {
              repositories(first: $Organization__repositories__first) {
                nodes {
                  assignableUsers(first: $Repository__assignableUsers__first) {
                    totalCount
                  }
                  commitComments(first: $Repository__commitComments__first) {
                    totalCount
                  }
                  contributingGuidelines {
                    body
                    resourcePath
                    url
                  }
                  defaultBranchRef {
                    id
                    name
                    prefix
                  }
                  deployments(first: $Repository__deployments__first) {
                    totalCount
                  }
                  environment(name: $Repository__environment__name) {
                    databaseId
                    id
                    isPinned
                  }
                  forks(first: $Repository__forks__first) {
                    totalCount
                    totalDiskUsage
                  }
                  issueTemplates {
                    title
                  }
                  labels(first: $Repository__labels__first) {
                    totalCount
                  }
                  languages(first: $Repository__languages__first) {
                    totalCount
                  }
                  latestRelease {
                    createdAt
                    databaseId
                    descriptionHTML
                    id
                    isLatest
                    isPrerelease
                    name
                    publishedAt
                    resourcePath
                    shortDescriptionHTML
                    tagName
                    updatedAt
                    viewerCanReact
                  }
                  licenseInfo {
                    featured
                    hidden
                    id
                    implementation
                    key
                  }
                  milestone(number: $Repository__milestone__number) {
                    closedAt
                    id
                    number
                    state
                    viewerCanClose
                  }
                  parent {
                    databaseId
                    deleteBranchOnMerge
                    diskUsage
                    forkCount
                    forkingAllowed
                    hasDiscussionsEnabled
                    hasIssuesEnabled
                    hasProjectsEnabled
                    hasWikiEnabled
                    homepageUrl
                    isArchived
                    isBlankIssuesEnabled
                    isEmpty
                    isFork
                    isInOrganization
                    isLocked
                    isPrivate
                    lockReason
                    mergeCommitMessage
                    name
                    openGraphImageUrl
                    projectsResourcePath
                    projectsUrl
                    rebaseMergeAllowed
                    resourcePath
                    securityPolicyUrl
                    shortDescriptionHTML
                    squashMergeCommitMessage
                    tempCloneToken
                    updatedAt
                    viewerCanCreateProjects
                    viewerHasStarred
                    viewerSubscription
                    webCommitSignoffRequired
                  }
                  pinnedDiscussions(first: $Repository__pinnedDiscussions__first) {
                    totalCount
                  }
                  pinnedEnvironments(first: $Repository__pinnedEnvironments__first) {
                    totalCount
                  }
                  pinnedIssues(first: $Repository__pinnedIssues__first) {
                    totalCount
                  }
                  planFeatures {
                    codeowners
                  }
                  primaryLanguage {
                    color
                    name
                  }
                  project(number: $Repository__project__number) {
                    bodyHTML
                    closedAt
                    createdAt
                    databaseId
                    updatedAt
                    url
                    viewerCanClose
                    viewerCanReopen
                    viewerCanUpdate
                  }
                  projectsV2(first: $Repository__projectsV2__first) {
                    totalCount
                  }
                  pullRequestTemplates {
                    body
                  }
                  recentProjects(first: $Repository__recentProjects__first) {
                    totalCount
                  }
                  release(tagName: $Repository__release__tagName) {
                    createdAt
                    description
                    descriptionHTML
                    id
                    isPrerelease
                    publishedAt
                    shortDescriptionHTML
                    tagName
                    updatedAt
                    url
                  }
                  releases(first: $Repository__releases__first) {
                    totalCount
                  }
                  repositoryTopics(first: $Repository__repositoryTopics__first) {
                    totalCount
                  }
                  ruleset(databaseId: $Repository__ruleset__databaseId) {
                    databaseId
                    enforcement
                  }
                  rulesets(first: $Repository__rulesets__first) {
                    totalCount
                  }
                  stargazers(first: $Repository__stargazers__first) {
                    totalCount
                  }
                  submodules(first: $Repository__submodules__first) {
                    totalCount
                  }
                  templateRepository {
                    archivedAt
                    createdAt
                    descriptionHTML
                    hasDiscussionsEnabled
                    hasIssuesEnabled
                    hasProjectsEnabled
                    hasVulnerabilityAlertsEnabled
                    hasWikiEnabled
                    homepageUrl
                    isBlankIssuesEnabled
                    isEmpty
                    isFork
                    isInOrganization
                    isLocked
                    lockReason
                    mergeCommitAllowed
                    mirrorUrl
                    projectsResourcePath
                    pushedAt
                    rebaseMergeAllowed
                    shortDescriptionHTML
                    squashMergeAllowed
                    sshUrl
                    stargazerCount
                    tempCloneToken
                    updatedAt
                    usesCustomOpenGraphImage
                    viewerCanAdminister
                    viewerCanSubscribe
                    viewerCanUpdateTopics
                    viewerDefaultMergeMethod
                    viewerPossibleCommitEmails
                    viewerSubscription
                  }
                  vulnerabilityAlert(number: $Repository__vulnerabilityAlert__number) {
                    createdAt
                    dependencyScope
                    dismissComment
                    dismissReason
                    id
                    state
                    vulnerableManifestFilename
                    vulnerableManifestPath
                    vulnerableRequirements
                  }
                  vulnerabilityAlerts(first: $Repository__vulnerabilityAlerts__first) {
                    totalCount
                  }
                  watchers(first: $Repository__watchers__first) {
                    totalCount
                  }
                  autoMergeAllowed
                  createdAt
                  databaseId
                  description
                  diskUsage
                  forkCount
                  forkingAllowed
                  hasDiscussionsEnabled
                  hasProjectsEnabled
                  hasSponsorshipsEnabled
                  hasWikiEnabled
                  isArchived
                  isBlankIssuesEnabled
                  isFork
                  isPrivate
                  isUserConfigurationRepository
                  mergeCommitAllowed
                  mergeCommitMessage
                  mergeCommitTitle
                  name
                  nameWithOwner
                  openGraphImageUrl
                  projectsResourcePath
                  pushedAt
                  resourcePath
                  securityPolicyUrl
                  shortDescriptionHTML
                  squashMergeCommitTitle
                  tempCloneToken
                  updatedAt
                  viewerCanCreateProjects
                  viewerCanSubscribe
                  viewerCanUpdateTopics
                  viewerDefaultCommitEmail
                  viewerPermission
                  viewerPossibleCommitEmails
                  webCommitSignoffRequired
                }
                totalDiskUsage
              }
              auditLog(first: $Organization__auditLog__first) {
                totalCount
              }
              domains(first: $Organization__domains__first) {
                pageInfo {
                  hasNextPage
                  startCursor
                }
                edges {
                  node {
                    createdAt
                    dnsHostName
                    hasFoundVerificationToken
                    tokenExpirationTime
                    updatedAt
                  }
                }
                nodes {
                  createdAt
                  domain
                  hasFoundHostName
                  hasFoundVerificationToken
                  isApproved
                  isRequiredForPolicyEnforcement
                  tokenExpirationTime
                  updatedAt
                  verificationToken
                }
              }
              enterpriseOwners(first: $Organization__enterpriseOwners__first) {
                nodes {
                  sponsorshipsAsSponsor(first: $User__sponsorshipsAsSponsor__first) {
                    totalCount
                  }
                  commitComments(first: $User__commitComments__first) {
                    totalCount
                  }
                  contributionsCollection {
                    earliestRestrictedContributionDate
                    hasActivityInThePast
                    hasAnyRestrictedContributions
                    isSingleDay
                    latestRestrictedContributionDate
                    restrictedContributionsCount
                    totalCommitContributions
                    totalPullRequestReviewContributions
                    totalRepositoriesWithContributedCommits
                    totalRepositoriesWithContributedPullRequestReviews
                  }
                  copilotEndpoints {
                    api
                    originTracker
                    proxy
                  }
                  enterprises(first: $User__enterprises__first) {
                    totalCount
                  }
                  following(first: $User__following__first) {
                    totalCount
                  }
                  gist(name: $User__gist__name) {
                    id
                    isPublic
                    pushedAt
                    resourcePath
                    viewerHasStarred
                  }
                  gistComments(first: $User__gistComments__first) {
                    totalCount
                  }
                  gists(first: $User__gists__first) {
                    totalCount
                  }
                  lifetimeReceivedSponsorshipValues(first: $User__lifetimeReceivedSponsorshipValues__first) {
                    totalCount
                  }
                  organization(login: $User__organization__login) {
                    announcement
                    announcementCreatedAt
                    announcementExpiresAt
                    anyPinnableItems
                    databaseId
                    description
                    email
                    estimatedNextSponsorsPayoutInCents
                    ipAllowListForInstalledAppsEnabledSetting
                    isVerified
                    location
                    login
                    monthlyEstimatedSponsorsIncomeInCents
                    name
                    newTeamUrl
                    notificationDeliveryRestrictionEnabledSetting
                    organizationBillingEmail
                    pinnedItemsRemaining
                    projectsResourcePath
                    projectsUrl
                    requiresTwoFactorAuthentication
                    resourcePath
                    teamsResourcePath
                    teamsUrl
                    totalSponsorshipAmountAsSponsorInCents
                    viewerCanChangePinnedItems
                    viewerCanCreateTeams
                    viewerIsFollowing
                    viewerIsSponsoring
                    webCommitSignoffRequired
                  }
                  organizations(first: $User__organizations__first) {
                    totalCount
                  }
                  packages(first: $User__packages__first) {
                    totalCount
                  }
                  project(number: $User__project__number) {
                    body
                    createdAt
                    id
                    name
                    number
                    viewerCanClose
                  }
                  projectsV2(first: $User__projectsV2__first) {
                    totalCount
                  }
                  publicKeys(first: $User__publicKeys__first) {
                    totalCount
                  }
                  pullRequests(first: $User__pullRequests__first) {
                    totalCount
                  }
                  repositories(first: $User__repositories__first) {
                    totalDiskUsage
                  }
                  repository(name: $User__repository__name) {
                    autoMergeAllowed
                    createdAt
                    hasIssuesEnabled
                    hasVulnerabilityAlertsEnabled
                    homepageUrl
                    id
                    isArchived
                    isFork
                    isPrivate
                    isTemplate
                    lockReason
                    name
                    nameWithOwner
                    projectsUrl
                    rebaseMergeAllowed
                    squashMergeAllowed
                    squashMergeCommitMessage
                    squashPrTitleUsedAsDefault
                    sshUrl
                    updatedAt
                    url
                    viewerCanAdminister
                    viewerDefaultCommitEmail
                    viewerPossibleCommitEmails
                    viewerSubscription
                    visibility
                    webCommitSignoffRequired
                  }
                  repositoryDiscussionComments(first: $User__repositoryDiscussionComments__first) {
                    totalCount
                  }
                  savedReplies(first: $User__savedReplies__first) {
                    totalCount
                  }
                  sponsoring(first: $User__sponsoring__first) {
                    totalCount
                  }
                  sponsorshipForViewerAsSponsor {
                    createdAt
                    id
                    isActive
                    isOneTimePayment
                  }
                  sponsorshipForViewerAsSponsorable {
                    id
                    isOneTimePayment
                    paymentSource
                    privacyLevel
                    tierSelectedAt
                  }
                  sponsorshipsAsMaintainer(first: $User__sponsorshipsAsMaintainer__first) {
                    totalCount
                    totalRecurringMonthlyPriceInCents
                    totalRecurringMonthlyPriceInDollars
                  }
                  starredRepositories(first: $User__starredRepositories__first) {
                    totalCount
                  }
                  status {
                    expiresAt
                    id
                  }
                  topRepositories(first: $User__topRepositories__first, orderBy: $User__topRepositories__orderBy) {
                    totalDiskUsage
                  }
                  watching(first: $User__watching__first) {
                    totalCount
                  }
                  anyPinnableItems
                  avatarUrl
                  bio
                  bioHTML
                  companyHTML
                  estimatedNextSponsorsPayoutInCents
                  hasSponsorsListing
                  isBountyHunter
                  isDeveloperProgramMember
                  isHireable
                  isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                  isSponsoringViewer
                  monthlyEstimatedSponsorsIncomeInCents
                  organizationVerifiedDomainEmails(login: $User__organizationVerifiedDomainEmails__login)
                  projectsResourcePath
                  projectsUrl
                  twitterUsername
                  updatedAt
                  url
                  userViewType
                  viewerCanChangePinnedItems
                  viewerCanCreateProjects
                  viewerCanSponsor
                  viewerIsFollowing
                  websiteUrl
                }
                pageInfo {
                  endCursor
                  hasPreviousPage
                  startCursor
                }
              }
              interactionAbility {
                expiresAt
              }
              ipAllowListEntries(first: $Organization__ipAllowListEntries__first) {
                nodes {
                  createdAt
                  updatedAt
                }
                edges {
                  cursor
                }
                pageInfo {
                  hasPreviousPage
                  startCursor
                }
              }
              lifetimeReceivedSponsorshipValues(first: $Organization__lifetimeReceivedSponsorshipValues__first) {
                pageInfo {
                  hasNextPage
                }
                nodes {
                  amountInCents
                  formattedAmount
                }
              }
              mannequins(first: $Organization__mannequins__first) {
                edges {
                  cursor
                }
                nodes {
                  avatarUrl
                  id
                  updatedAt
                  url
                }
                pageInfo {
                  startCursor
                }
                totalCount
              }
              memberStatuses(first: $Organization__memberStatuses__first) {
                pageInfo {
                  hasNextPage
                }
                nodes {
                  organization {
                    announcement
                    announcementExpiresAt
                    archivedAt
                    createdAt
                    databaseId
                    email
                    estimatedNextSponsorsPayoutInCents
                    ipAllowListForInstalledAppsEnabledSetting
                    membersCanForkPrivateRepositories
                    newTeamResourcePath
                    newTeamUrl
                    notificationDeliveryRestrictionEnabledSetting
                    organizationBillingEmail
                    pinnedItemsRemaining
                    projectsResourcePath
                    projectsUrl
                    teamsResourcePath
                    teamsUrl
                    updatedAt
                    viewerCanCreateProjects
                    viewerCanCreateRepositories
                    viewerIsFollowing
                    viewerIsSponsoring
                    websiteUrl
                  }
                  emoji
                  emojiHTML
                  message
                }
              }
              membersWithRole(first: $Organization__membersWithRole__first) {
                edges {
                  cursor
                  hasTwoFactorEnabled
                }
                nodes {
                  recentProjects(first: $User__recentProjects__first) {
                    totalCount
                  }
                  commitComments(first: $User__commitComments__first) {
                    totalCount
                  }
                  contributionsCollection {
                    earliestRestrictedContributionDate
                    hasAnyContributions
                    latestRestrictedContributionDate
                    restrictedContributionsCount
                    totalCommitContributions
                    totalPullRequestReviewContributions
                    totalRepositoriesWithContributedPullRequestReviews
                  }
                  enterprises(first: $User__enterprises__first) {
                    totalCount
                  }
                  gist(name: $User__gist__name) {
                    createdAt
                    name
                    pushedAt
                    url
                  }
                  gists(first: $User__gists__first) {
                    totalCount
                  }
                  interactionAbility {
                    expiresAt
                    limit
                  }
                  issueComments(first: $User__issueComments__first) {
                    totalCount
                  }
                  lifetimeReceivedSponsorshipValues(first: $User__lifetimeReceivedSponsorshipValues__first) {
                    totalCount
                  }
                  lists(first: $User__lists__first) {
                    totalCount
                  }
                  project(number: $User__project__number) {
                    body
                    bodyHTML
                    closed
                    databaseId
                    name
                    number
                    resourcePath
                    updatedAt
                    url
                    viewerCanUpdate
                  }
                  projects(first: $User__projects__first) {
                    totalCount
                  }
                  projectsV2(first: $User__projectsV2__first) {
                    totalCount
                  }
                  repositories(first: $User__repositories__first) {
                    totalDiskUsage
                  }
                  sponsors(first: $User__sponsors__first) {
                    totalCount
                  }
                  sponsorsActivities(first: $User__sponsorsActivities__first) {
                    totalCount
                  }
                  sponsorshipForViewerAsSponsorable {
                    createdAt
                    isSponsorOptedIntoEmail
                    paymentSource
                    privacyLevel
                    tierSelectedAt
                  }
                  sponsorshipsAsSponsor(first: $User__sponsorshipsAsSponsor__first) {
                    totalRecurringMonthlyPriceInCents
                    totalRecurringMonthlyPriceInDollars
                  }
                  suggestedListNames {
                    id
                    name
                  }
                  watching(first: $User__watching__first) {
                    totalCount
                  }
                  anyPinnableItems
                  bioHTML
                  canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                  companyHTML
                  id
                  isEmployee
                  isFollowingViewer
                  isHireable
                  isSiteAdmin
                  isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                  location
                  organizationVerifiedDomainEmails(login: $User__organizationVerifiedDomainEmails__login)
                  projectsResourcePath
                  projectsUrl
                  resourcePath
                  twitterUsername
                  viewerCanChangePinnedItems
                  viewerCanCreateProjects
                  viewerCanSponsor
                  viewerIsFollowing
                  viewerIsSponsoring
                  websiteUrl
                }
                pageInfo {
                  hasNextPage
                  hasPreviousPage
                }
              }
              packages(first: $Organization__packages__first) {
                edges {
                  node {
                    id
                  }
                  cursor
                }
              }
              pinnableItems(first: $Organization__pinnableItems__first) {
                pageInfo {
                  hasNextPage
                  startCursor
                }
              }
              projects(first: $Organization__projects__first) {
                pageInfo {
                  startCursor
                }
                edges {
                  node {
                    body
                    closedAt
                    createdAt
                    number
                    resourcePath
                    url
                    viewerCanReopen
                    viewerCanUpdate
                  }
                }
                nodes {
                  body
                  closed
                  closedAt
                  createdAt
                  databaseId
                  name
                  number
                  resourcePath
                  state
                  url
                  viewerCanClose
                  viewerCanUpdate
                }
                totalCount
              }
              projectsV2(first: $Organization__projectsV2__first) {
                nodes {
                  createdAt
                  number
                  resourcePath
                  shortDescription
                  title
                  viewerCanClose
                  viewerCanUpdate
                }
                edges {
                  node {
                    closed
                    databaseId
                    id
                    number
                    resourcePath
                    updatedAt
                    viewerCanReopen
                    viewerCanUpdate
                  }
                }
                pageInfo {
                  hasPreviousPage
                  startCursor
                }
              }
              projectV2(number: $Organization__projectV2__number) {
                repositories(first: $ProjectV2__repositories__first) {
                  totalDiskUsage
                }
                fields(first: $ProjectV2__fields__first) {
                  pageInfo {
                    hasPreviousPage
                  }
                  edges {
                    cursor
                  }
                  totalCount
                }
                items(first: $ProjectV2__items__first) {
                  pageInfo {
                    endCursor
                  }
                  edges {
                    cursor
                  }
                  totalCount
                }
                statusUpdates(first: $ProjectV2__statusUpdates__first) {
                  edges {
                    cursor
                  }
                  pageInfo {
                    endCursor
                    startCursor
                  }
                  totalCount
                }
                teams(first: $ProjectV2__teams__first) {
                  totalCount
                }
                views(first: $ProjectV2__views__first) {
                  totalCount
                }
                workflow(number: $ProjectV2__workflow__number) {
                  createdAt
                }
                workflows(first: $ProjectV2__workflows__first) {
                  pageInfo {
                    endCursor
                    hasPreviousPage
                  }
                  edges {
                    cursor
                  }
                  nodes {
                    databaseId
                    enabled
                    name
                    number
                  }
                  totalCount
                }
                closed
                closedAt
                createdAt
                databaseId
                public
                template
                title
                viewerCanUpdate
              }
              recentProjects(first: $Organization__recentProjects__first) {
                nodes {
                  createdAt
                  databaseId
                  id
                  number
                  readme
                  template
                  title
                  updatedAt
                  url
                  viewerCanClose
                  viewerCanReopen
                  viewerCanUpdate
                }
                pageInfo {
                  endCursor
                  hasNextPage
                  startCursor
                }
              }
              sponsorshipForViewerAsSponsor {
                maintainer {
                  bio
                  canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                  company
                  databaseId
                  estimatedNextSponsorsPayoutInCents
                  isBountyHunter
                  isCampusExpert
                  isDeveloperProgramMember
                  isEmployee
                  isFollowingViewer
                  isGitHubStar
                  isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                  isSponsoringViewer
                  isViewer
                  monthlyEstimatedSponsorsIncomeInCents
                  name
                  pinnedItemsRemaining
                  projectsResourcePath
                  pronouns
                  resourcePath
                  twitterUsername
                  updatedAt
                  userViewType
                  viewerCanChangePinnedItems
                  viewerCanFollow
                  viewerCanSponsor
                }
                sponsor {
                  gistComments(first: $User__gistComments__first) {
                    totalCount
                  }
                  copilotEndpoints {
                    api
                  }
                  enterprises(first: $User__enterprises__first) {
                    totalCount
                  }
                  interactionAbility {
                    expiresAt
                    limit
                  }
                  issueComments(first: $User__issueComments__first) {
                    totalCount
                  }
                  issues(first: $User__issues__first) {
                    totalCount
                  }
                  itemShowcase {
                    hasPinnedItems
                  }
                  lifetimeReceivedSponsorshipValues(first: $User__lifetimeReceivedSponsorshipValues__first) {
                    totalCount
                  }
                  organizations(first: $User__organizations__first) {
                    totalCount
                  }
                  packages(first: $User__packages__first) {
                    totalCount
                  }
                  pinnableItems(first: $User__pinnableItems__first) {
                    totalCount
                  }
                  recentProjects(first: $User__recentProjects__first) {
                    totalCount
                  }
                  repositoriesContributedTo(first: $User__repositoriesContributedTo__first) {
                    totalDiskUsage
                  }
                  repositoryDiscussions(first: $User__repositoryDiscussions__first) {
                    totalCount
                  }
                  savedReplies(first: $User__savedReplies__first) {
                    totalCount
                  }
                  socialAccounts(first: $User__socialAccounts__first) {
                    totalCount
                  }
                  sponsorsActivities(first: $User__sponsorsActivities__first) {
                    totalCount
                  }
                  sponsorshipForViewerAsSponsor {
                    isActive
                    isSponsorOptedIntoEmail
                    privacyLevel
                  }
                  sponsorshipForViewerAsSponsorable {
                    createdAt
                    isActive
                    isOneTimePayment
                  }
                  sponsorshipsAsMaintainer(first: $User__sponsorshipsAsMaintainer__first) {
                    totalRecurringMonthlyPriceInDollars
                  }
                  sponsorsListing {
                    billingCountryOrRegion
                    contactEmailAddress
                    dashboardResourcePath
                    fullDescriptionHTML
                    residenceCountryOrRegion
                    resourcePath
                    slug
                    url
                  }
                  status {
                    createdAt
                    expiresAt
                    message
                  }
                  topRepositories(first: $User__topRepositories__first, orderBy: $User__topRepositories__orderBy) {
                    totalCount
                    totalDiskUsage
                  }
                  anyPinnableItems
                  bioHTML
                  canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                  createdAt
                  hasSponsorsListing
                  id
                  isBountyHunter
                  isCampusExpert
                  isEmployee
                  isFollowingViewer
                  isSiteAdmin
                  isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                  login
                  name
                  pinnedItemsRemaining
                  projectsResourcePath
                  pronouns
                  resourcePath
                  totalSponsorshipAmountAsSponsorInCents
                  userViewType
                  viewerCanChangePinnedItems
                  viewerCanSponsor
                  viewerIsFollowing
                  viewerIsSponsoring
                  websiteUrl
                }
                tier {
                  adminInfo {
                    isPublished
                  }
                  sponsorsListing {
                    billingCountryOrRegion
                    contactEmailAddress
                    createdAt
                    id
                    name
                    slug
                  }
                  description
                  isCustomAmount
                  isOneTime
                  monthlyPriceInDollars
                  name
                  updatedAt
                }
                id
                isOneTimePayment
                isSponsorOptedIntoEmail
                privacyLevel
                tierSelectedAt
              }
              sponsorshipNewsletters(first: $Organization__sponsorshipNewsletters__first) {
                nodes {
                  author {
                    avatarUrl
                    bio
                    canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                    companyHTML
                    isDeveloperProgramMember
                    isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                    isViewer
                    login
                    monthlyEstimatedSponsorsIncomeInCents
                    projectsResourcePath
                    updatedAt
                    viewerCanChangePinnedItems
                    viewerCanCreateProjects
                    viewerCanFollow
                  }
                  body
                  id
                  isPublished
                  updatedAt
                }
                edges {
                  node {
                    createdAt
                    subject
                  }
                }
              }
              sponsorshipsAsSponsor(first: $Organization__sponsorshipsAsSponsor__first) {
                totalRecurringMonthlyPriceInDollars
              }
              sponsorsListing {
                activeStripeConnectAccount {
                  billingCountryOrRegion
                  isActive
                }
                billingCountryOrRegion
                createdAt
                dashboardResourcePath
                name
                resourcePath
                url
              }
              team(slug: $Organization__team__slug) {
                description
                discussionsResourcePath
                discussionsUrl
                editTeamResourcePath
                editTeamUrl
                id
                membersResourcePath
                membersUrl
                name
                newTeamUrl
                notificationSetting
                repositoriesResourcePath
                repositoriesUrl
                resourcePath
                teamsResourcePath
                updatedAt
                viewerCanSubscribe
                viewerSubscription
              }
              announcement
              announcementCreatedAt
              announcementUserDismissible
              anyPinnableItems
              createdAt
              databaseId
              description
              email
              estimatedNextSponsorsPayoutInCents
              hasSponsorsListing
              ipAllowListForInstalledAppsEnabledSetting
              isSponsoredBy(accountLogin: $Organization__isSponsoredBy__accountLogin)
              location
              login
              membersCanForkPrivateRepositories
              monthlyEstimatedSponsorsIncomeInCents
              newTeamUrl
              pinnedItemsRemaining
              projectsUrl
              teamsResourcePath
              totalSponsorshipAmountAsSponsorInCents
              viewerCanAdminister
              viewerCanCreateTeams
              viewerIsFollowing
            }
          }
          nodes {
            announcement
            announcementCreatedAt
            announcementExpiresAt
            announcementUserDismissible
            archivedAt
            avatarUrl
            createdAt
            description
            hasSponsorsListing
            ipAllowListForInstalledAppsEnabledSetting
            isSponsoredBy(accountLogin: $Organization__isSponsoredBy__accountLogin)
            name
            notificationDeliveryRestrictionEnabledSetting
            organizationBillingEmail
            pinnedItemsRemaining
            projectsResourcePath
            requiresTwoFactorAuthentication
            resourcePath
            teamsUrl
            twitterUsername
            viewerCanChangePinnedItems
            viewerCanCreateProjects
            viewerCanCreateRepositories
            viewerCanCreateTeams
            viewerIsAMember
            viewerIsFollowing
            viewerIsSponsoring
            webCommitSignoffRequired
          }
          pageInfo {
            endCursor
            startCursor
          }
          totalCount
        }
        twoFactorRequiredSettingOrganizations(first: $EnterpriseOwnerInfo__twoFactorRequiredSettingOrganizations__first, value: $EnterpriseOwnerInfo__twoFactorRequiredSettingOrganizations__value) {
          totalCount
        }
        affiliatedUsersWithTwoFactorDisabledExist
        allowPrivateRepositoryForkingSetting
        allowPrivateRepositoryForkingSettingPolicyValue
        defaultRepositoryPermissionSetting
        isUpdatingDefaultRepositoryPermission
        membersCanCreateRepositoriesSetting
        membersCanDeleteRepositoriesSetting
        membersCanInviteCollaboratorsSetting
        membersCanMakePurchasesSetting
        notificationDeliveryRestrictionEnabledSetting
        repositoryProjectsSetting
        teamDiscussionsSetting
        twoFactorDisallowedMethodsSetting
      }
      organizations(first: $Enterprise__organizations__first) {
        pageInfo {
          hasNextPage
          hasPreviousPage
          startCursor
        }
      }
      announcement
      announcementCreatedAt
      announcementExpiresAt
      announcementUserDismissible
      description
      descriptionHTML
      location
      name
      readme
      readmeHTML
      slug
      url
      websiteUrl
    }
  }
  licenses {
    limitations {
      key
    }
    conditions {
      description
      label
    }
    permissions {
      description
      label
    }
    id
  }
  marketplaceListing(slug: $Query__marketplaceListing__slug) {
    companyUrl
    documentationUrl
    extendedDescriptionHTML
    fullDescription
    fullDescriptionHTML
    hasTermsOfService
    id
    installationUrl
    installedForViewer
    isArchived
    isDraft
    isPaid
    isRejected
    isVerificationPendingFromDraft
    isVerificationPendingFromUnverified
    logoBackgroundColor
    normalizedShortDescription
    slug
    statusUrl
    supportEmail
    termsOfServiceUrl
    url
    viewerCanEditPlans
    viewerCanRedraft
    viewerCanReject
    viewerCanRequestApproval
  }
  meta {
    githubEnterpriseImporterIpAddresses
    gitHubServicesSha
    gitIpAddresses
    hookIpAddresses
  }
  rateLimit {
    limit
  }
  relay {
    id
  }
  sponsorables(first: $Query__sponsorables__first) {
    edges {
      cursor
    }
  }
  topic(name: $Query__topic__name) {
    id
  }
  viewer {
    anyPinnableItems
    bio
    companyHTML
    createdAt
    estimatedNextSponsorsPayoutInCents
    hasSponsorsListing
    isBountyHunter
    isCampusExpert
    isDeveloperProgramMember
    isEmployee
    isHireable
    isSiteAdmin
    isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
    isViewer
    login
    name
    projectsUrl
    pronouns
    totalSponsorshipAmountAsSponsorInCents
    twitterUsername
    updatedAt
    url
    viewerCanFollow
  }
  id
}
