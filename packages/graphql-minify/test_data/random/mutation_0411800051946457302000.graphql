mutation RandomMutation($PullRequestReview__comments__first: Int, $PullRequestReview__onBehalfOf__first: Int, $CommitComment__userContentEdits__first: Int, $User__commitComments__first: Int, $User__enterprises__first: Int, $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login: String!, $User__isSponsoredBy__accountLogin: String!, $User__organizationVerifiedDomainEmails__login: String!, $User__following__first: Int, $User__gists__first: Int, $IssueComment__reactions__first: Int, $User__issueComments__first: Int, $User__lists__first: Int, $User__organizations__first: Int, $Package__version__version: String!, $Package__versions__first: Int, $User__packages__first: Int, $User__projectV2__number: Int!, $User__pullRequests__first: Int, $User__repositoriesContributedTo__first: Int, $User__repositoryDiscussionComments__first: Int, $User__socialAccounts__first: Int, $User__pinnedItems__first: Int, $User__followers__first: Int, $User__lifetimeReceivedSponsorshipValues__first: Int, $User__organization__login: String!, $User__pinnableItems__first: Int, $User__projectsV2__first: Int, $User__publicKeys__first: Int, $User__repository__name: String!, $User__savedReplies__first: Int, $User__sponsors__first: Int, $User__sponsorsActivities__first: Int, $User__sponsorshipNewsletters__first: Int, $User__sponsorshipsAsSponsor__first: Int, $User__topRepositories__first: Int, $User__topRepositories__orderBy: RepositoryOrder!, $User__watching__first: Int, $User__sponsorshipsAsMaintainer__first: Int, $User__gist__name: String!, $User__gistComments__first: Int, $Organization__isSponsoredBy__accountLogin: String!, $User__project__number: Int!, $User__repositories__first: Int, $User__repositoryDiscussions__first: Int, $User__starredRepositories__first: Int, $PullRequestReview__reactions__first: Int, $Mutation__deletePullRequestReview__input: DeletePullRequestReviewInput!) {
  deletePullRequestReview(input: $Mutation__deletePullRequestReview__input) {
    pullRequestReview {
      comments(first: $PullRequestReview__comments__first) {
        pageInfo {
          hasPreviousPage
        }
      }
      onBehalfOf(first: $PullRequestReview__onBehalfOf__first) {
        pageInfo {
          endCursor
          hasNextPage
          hasPreviousPage
          startCursor
        }
        nodes {
          avatarUrl
          databaseId
          description
          discussionsResourcePath
          editTeamUrl
          membersResourcePath
          name
          newTeamResourcePath
          newTeamUrl
          notificationSetting
          repositoriesResourcePath
          reviewRequestDelegationAlgorithm
          reviewRequestDelegationEnabled
          reviewRequestDelegationMemberCount
          slug
          teamsUrl
          updatedAt
          url
          viewerCanSubscribe
        }
      }
      reactionGroups {
        content
        createdAt
        viewerHasReacted
      }
      reactions(first: $PullRequestReview__reactions__first) {
        nodes {
          databaseId
        }
        edges {
          node {
            user {
              suggestedListNames {
                id
                name
              }
              commitComments(first: $User__commitComments__first) {
                pageInfo {
                  endCursor
                  hasNextPage
                  hasPreviousPage
                }
                nodes {
                  userContentEdits(first: $CommitComment__userContentEdits__first) {
                    totalCount
                  }
                  commit {
                    authoredDate
                    commitResourcePath
                    committedViaWeb
                    deletions
                    id
                    messageHeadline
                    messageHeadlineHTML
                    oid
                    pushedDate
                    tarballUrl
                    treeResourcePath
                    treeUrl
                    url
                  }
                  authorAssociation
                  bodyHTML
                  bodyText
                  includesCreatedEdit
                  minimizedReason
                  path
                  updatedAt
                  viewerCanDelete
                  viewerCanMinimize
                  viewerCannotUpdateReasons
                  viewerCanReact
                  viewerCanUpdate
                  viewerDidAuthor
                }
              }
              copilotEndpoints {
                api
                originTracker
                telemetry
              }
              enterprises(first: $User__enterprises__first) {
                edges {
                  node {
                    avatarUrl
                    billingEmail
                    databaseId
                    description
                    id
                    readme
                    readmeHTML
                    resourcePath
                    slug
                    url
                  }
                }
                pageInfo {
                  hasPreviousPage
                }
                totalCount
              }
              following(first: $User__following__first) {
                pageInfo {
                  endCursor
                }
                nodes {
                  avatarUrl
                  canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                  createdAt
                  estimatedNextSponsorsPayoutInCents
                  id
                  isCampusExpert
                  isDeveloperProgramMember
                  isFollowingViewer
                  isHireable
                  isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                  location
                  login
                  monthlyEstimatedSponsorsIncomeInCents
                  name
                  organizationVerifiedDomainEmails(login: $User__organizationVerifiedDomainEmails__login)
                  projectsUrl
                  totalSponsorshipAmountAsSponsorInCents
                  twitterUsername
                  viewerCanChangePinnedItems
                  viewerCanCreateProjects
                  viewerCanFollow
                  viewerCanSponsor
                  viewerIsFollowing
                  viewerIsSponsoring
                  websiteUrl
                }
              }
              gists(first: $User__gists__first) {
                nodes {
                  createdAt
                  id
                  isFork
                  name
                  pushedAt
                  resourcePath
                  stargazerCount
                  updatedAt
                  viewerHasStarred
                }
                totalCount
              }
              interactionAbility {
                origin
              }
              issueComments(first: $User__issueComments__first) {
                nodes {
                  reactionGroups {
                    content
                    createdAt
                  }
                  reactions(first: $IssueComment__reactions__first) {
                    viewerHasReacted
                  }
                  repository {
                    archivedAt
                    createdAt
                    description
                    descriptionHTML
                    diskUsage
                    forkCount
                    hasDiscussionsEnabled
                    hasProjectsEnabled
                    isArchived
                    isBlankIssuesEnabled
                    isLocked
                    isMirror
                    isPrivate
                    lockReason
                    mergeCommitAllowed
                    mirrorUrl
                    name
                    nameWithOwner
                    projectsResourcePath
                    projectsUrl
                    securityPolicyUrl
                    shortDescriptionHTML
                    squashMergeAllowed
                    squashMergeCommitTitle
                    sshUrl
                    viewerCanCreateProjects
                    viewerCanSubscribe
                    viewerCanUpdateTopics
                    viewerDefaultCommitEmail
                    viewerDefaultMergeMethod
                    visibility
                    webCommitSignoffRequired
                  }
                  authorAssociation
                  bodyHTML
                  createdAt
                  createdViaEmail
                  databaseId
                  fullDatabaseId
                  id
                  includesCreatedEdit
                  lastEditedAt
                  publishedAt
                  viewerCanDelete
                  viewerDidAuthor
                }
                pageInfo {
                  hasNextPage
                  hasPreviousPage
                  startCursor
                }
              }
              lists(first: $User__lists__first) {
                pageInfo {
                  hasNextPage
                  hasPreviousPage
                }
              }
              organizations(first: $User__organizations__first) {
                totalCount
              }
              packages(first: $User__packages__first) {
                edges {
                  node {
                    id
                    packageType
                  }
                }
                nodes {
                  repository {
                    allowUpdateBranch
                    databaseId
                    deleteBranchOnMerge
                    descriptionHTML
                    diskUsage
                    forkCount
                    hasIssuesEnabled
                    hasWikiEnabled
                    isArchived
                    isEmpty
                    isInOrganization
                    isLocked
                    isTemplate
                    isUserConfigurationRepository
                    mergeCommitMessage
                    mirrorUrl
                    nameWithOwner
                    projectsResourcePath
                    projectsUrl
                    pushedAt
                    rebaseMergeAllowed
                    securityPolicyUrl
                    shortDescriptionHTML
                    squashMergeAllowed
                    squashMergeCommitTitle
                    sshUrl
                    url
                    viewerCanCreateProjects
                    viewerDefaultMergeMethod
                    viewerPossibleCommitEmails
                    viewerSubscription
                    visibility
                  }
                  statistics {
                    downloadsTotalCount
                  }
                  version(version: $Package__version__version) {
                    id
                    preRelease
                    summary
                  }
                  versions(first: $Package__versions__first) {
                    totalCount
                  }
                  name
                }
                totalCount
              }
              projectV2(number: $User__projectV2__number) {
                closed
                createdAt
                databaseId
                id
                public
                resourcePath
                template
                updatedAt
                url
                viewerCanClose
              }
              pullRequests(first: $User__pullRequests__first) {
                totalCount
              }
              repositoriesContributedTo(first: $User__repositoriesContributedTo__first) {
                edges {
                  node {
                    archivedAt
                    createdAt
                    deleteBranchOnMerge
                    forkingAllowed
                    hasDiscussionsEnabled
                    hasProjectsEnabled
                    hasSponsorshipsEnabled
                    hasVulnerabilityAlertsEnabled
                    hasWikiEnabled
                    id
                    isArchived
                    isEmpty
                    isFork
                    isLocked
                    lockReason
                    mergeCommitAllowed
                    mirrorUrl
                    name
                    pushedAt
                    rebaseMergeAllowed
                    securityPolicyUrl
                    squashMergeAllowed
                    squashMergeCommitTitle
                    stargazerCount
                    viewerCanAdminister
                    viewerCanCreateProjects
                    viewerCanSubscribe
                    viewerDefaultMergeMethod
                    viewerPermission
                    viewerPossibleCommitEmails
                    viewerSubscription
                    visibility
                  }
                }
              }
              repositoryDiscussionComments(first: $User__repositoryDiscussionComments__first) {
                nodes {
                  authorAssociation
                  createdAt
                  id
                  includesCreatedEdit
                  isAnswer
                  lastEditedAt
                  resourcePath
                  updatedAt
                  upvoteCount
                  viewerCanMinimize
                  viewerCanReact
                  viewerCanUpvote
                }
                edges {
                  node {
                    authorAssociation
                    body
                    createdAt
                    createdViaEmail
                    deletedAt
                    includesCreatedEdit
                    isAnswer
                    isMinimized
                    lastEditedAt
                    minimizedReason
                    publishedAt
                    resourcePath
                    updatedAt
                    upvoteCount
                    viewerCanDelete
                    viewerCanMarkAsAnswer
                    viewerCanMinimize
                    viewerCannotUpdateReasons
                    viewerCanUnmarkAsAnswer
                    viewerCanUpdate
                    viewerCanUpvote
                    viewerHasUpvoted
                  }
                  cursor
                }
                pageInfo {
                  endCursor
                  hasNextPage
                  hasPreviousPage
                }
              }
              socialAccounts(first: $User__socialAccounts__first) {
                totalCount
              }
              sponsorshipForViewerAsSponsorable {
                sponsor {
                  pinnedItems(first: $User__pinnedItems__first) {
                    totalCount
                  }
                  enterprises(first: $User__enterprises__first) {
                    totalCount
                  }
                  followers(first: $User__followers__first) {
                    totalCount
                  }
                  gists(first: $User__gists__first) {
                    totalCount
                  }
                  issueComments(first: $User__issueComments__first) {
                    totalCount
                  }
                  itemShowcase {
                    hasPinnedItems
                  }
                  lifetimeReceivedSponsorshipValues(first: $User__lifetimeReceivedSponsorshipValues__first) {
                    totalCount
                  }
                  lists(first: $User__lists__first) {
                    totalCount
                  }
                  organization(login: $User__organization__login) {
                    announcementExpiresAt
                    avatarUrl
                    createdAt
                    description
                    descriptionHTML
                    email
                    estimatedNextSponsorsPayoutInCents
                    ipAllowListEnabledSetting
                    ipAllowListForInstalledAppsEnabledSetting
                    isSponsoringViewer
                    location
                    login
                    membersCanForkPrivateRepositories
                    monthlyEstimatedSponsorsIncomeInCents
                    name
                    newTeamResourcePath
                    pinnedItemsRemaining
                    projectsUrl
                    requiresTwoFactorAuthentication
                    resourcePath
                    teamsResourcePath
                    teamsUrl
                    totalSponsorshipAmountAsSponsorInCents
                    updatedAt
                    url
                    viewerCanChangePinnedItems
                    viewerCanCreateProjects
                    viewerCanSponsor
                    viewerIsSponsoring
                    webCommitSignoffRequired
                  }
                  pinnableItems(first: $User__pinnableItems__first) {
                    totalCount
                  }
                  projectsV2(first: $User__projectsV2__first) {
                    totalCount
                  }
                  publicKeys(first: $User__publicKeys__first) {
                    totalCount
                  }
                  pullRequests(first: $User__pullRequests__first) {
                    totalCount
                  }
                  repositoriesContributedTo(first: $User__repositoriesContributedTo__first) {
                    totalCount
                  }
                  repository(name: $User__repository__name) {
                    allowUpdateBranch
                    archivedAt
                    autoMergeAllowed
                    createdAt
                    description
                    descriptionHTML
                    forkCount
                    forkingAllowed
                    hasDiscussionsEnabled
                    hasSponsorshipsEnabled
                    hasVulnerabilityAlertsEnabled
                    hasWikiEnabled
                    homepageUrl
                    isBlankIssuesEnabled
                    isDisabled
                    isEmpty
                    isFork
                    isInOrganization
                    isMirror
                    isUserConfigurationRepository
                    lockReason
                    mergeCommitMessage
                    mergeCommitTitle
                    mirrorUrl
                    name
                    nameWithOwner
                    pushedAt
                    rebaseMergeAllowed
                    securityPolicyUrl
                    sshUrl
                    tempCloneToken
                    url
                    usesCustomOpenGraphImage
                    viewerCanSubscribe
                    viewerCanUpdateTopics
                    viewerPossibleCommitEmails
                    visibility
                  }
                  savedReplies(first: $User__savedReplies__first) {
                    totalCount
                  }
                  socialAccounts(first: $User__socialAccounts__first) {
                    totalCount
                  }
                  sponsors(first: $User__sponsors__first) {
                    totalCount
                  }
                  sponsorsActivities(first: $User__sponsorsActivities__first) {
                    totalCount
                  }
                  sponsorshipForViewerAsSponsor {
                    createdAt
                    isOneTimePayment
                    isSponsorOptedIntoEmail
                    paymentSource
                  }
                  sponsorshipNewsletters(first: $User__sponsorshipNewsletters__first) {
                    totalCount
                  }
                  sponsorshipsAsSponsor(first: $User__sponsorshipsAsSponsor__first) {
                    totalRecurringMonthlyPriceInCents
                    totalRecurringMonthlyPriceInDollars
                  }
                  status {
                    message
                    updatedAt
                  }
                  topRepositories(first: $User__topRepositories__first, orderBy: $User__topRepositories__orderBy) {
                    totalDiskUsage
                  }
                  watching(first: $User__watching__first) {
                    totalCount
                  }
                  avatarUrl
                  bioHTML
                  createdAt
                  databaseId
                  email
                  id
                  isBountyHunter
                  isFollowingViewer
                  isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                  isViewer
                  location
                  login
                  monthlyEstimatedSponsorsIncomeInCents
                  pinnedItemsRemaining
                  projectsResourcePath
                  pronouns
                  twitterUsername
                  url
                  userViewType
                  viewerCanChangePinnedItems
                  viewerIsFollowing
                  websiteUrl
                }
                tier {
                  adminInfo {
                    isDraft
                    isRetired
                  }
                  createdAt
                  description
                  descriptionHTML
                  isCustomAmount
                  updatedAt
                }
                id
                isSponsorOptedIntoEmail
                paymentSource
              }
              sponsorshipNewsletters(first: $User__sponsorshipNewsletters__first) {
                pageInfo {
                  endCursor
                  hasPreviousPage
                  startCursor
                }
              }
              sponsorshipsAsMaintainer(first: $User__sponsorshipsAsMaintainer__first) {
                pageInfo {
                  endCursor
                  startCursor
                }
                edges {
                  node {
                    isOneTimePayment
                    isSponsorOptedIntoEmail
                    paymentSource
                  }
                }
                totalRecurringMonthlyPriceInCents
              }
              sponsorshipsAsSponsor(first: $User__sponsorshipsAsSponsor__first) {
                totalRecurringMonthlyPriceInCents
              }
              status {
                organization {
                  announcement
                  announcementUserDismissible
                  archivedAt
                  avatarUrl
                  createdAt
                  databaseId
                  description
                  estimatedNextSponsorsPayoutInCents
                  hasSponsorsListing
                  id
                  ipAllowListEnabledSetting
                  ipAllowListForInstalledAppsEnabledSetting
                  monthlyEstimatedSponsorsIncomeInCents
                  name
                  newTeamResourcePath
                  newTeamUrl
                  pinnedItemsRemaining
                  projectsResourcePath
                  totalSponsorshipAmountAsSponsorInCents
                  twitterUsername
                  updatedAt
                  viewerCanCreateRepositories
                  viewerIsFollowing
                  viewerIsSponsoring
                  webCommitSignoffRequired
                  websiteUrl
                }
                user {
                  sponsorshipForViewerAsSponsorable {
                    isActive
                    isOneTimePayment
                    isSponsorOptedIntoEmail
                    paymentSource
                    privacyLevel
                  }
                  commitComments(first: $User__commitComments__first) {
                    totalCount
                  }
                  contributionsCollection {
                    doesEndInCurrentMonth
                    earliestRestrictedContributionDate
                    hasActivityInThePast
                    latestRestrictedContributionDate
                    totalCommitContributions
                    totalPullRequestContributions
                    totalRepositoriesWithContributedCommits
                    totalRepositoriesWithContributedIssues
                    totalRepositoriesWithContributedPullRequests
                  }
                  copilotEndpoints {
                    telemetry
                  }
                  enterprises(first: $User__enterprises__first) {
                    totalCount
                  }
                  gist(name: $User__gist__name) {
                    id
                    isFork
                    isPublic
                    name
                    pushedAt
                    resourcePath
                    stargazerCount
                    url
                  }
                  gistComments(first: $User__gistComments__first) {
                    totalCount
                  }
                  gists(first: $User__gists__first) {
                    totalCount
                  }
                  lifetimeReceivedSponsorshipValues(first: $User__lifetimeReceivedSponsorshipValues__first) {
                    totalCount
                  }
                  lists(first: $User__lists__first) {
                    totalCount
                  }
                  organization(login: $User__organization__login) {
                    announcement
                    announcementCreatedAt
                    announcementExpiresAt
                    announcementUserDismissible
                    avatarUrl
                    databaseId
                    id
                    ipAllowListForInstalledAppsEnabledSetting
                    isSponsoredBy(accountLogin: $Organization__isSponsoredBy__accountLogin)
                    isVerified
                    location
                    login
                    monthlyEstimatedSponsorsIncomeInCents
                    newTeamUrl
                    notificationDeliveryRestrictionEnabledSetting
                    organizationBillingEmail
                    pinnedItemsRemaining
                    projectsResourcePath
                    projectsUrl
                    totalSponsorshipAmountAsSponsorInCents
                    twitterUsername
                    updatedAt
                    viewerCanAdminister
                    viewerCanChangePinnedItems
                    viewerCanCreateTeams
                    viewerCanSponsor
                    viewerIsSponsoring
                    websiteUrl
                  }
                  packages(first: $User__packages__first) {
                    totalCount
                  }
                  pinnableItems(first: $User__pinnableItems__first) {
                    totalCount
                  }
                  project(number: $User__project__number) {
                    closed
                    closedAt
                    id
                    name
                    resourcePath
                    updatedAt
                    url
                    viewerCanReopen
                    viewerCanUpdate
                  }
                  projectsV2(first: $User__projectsV2__first) {
                    totalCount
                  }
                  repositories(first: $User__repositories__first) {
                    totalCount
                  }
                  repository(name: $User__repository__name) {
                    allowUpdateBranch
                    autoMergeAllowed
                    descriptionHTML
                    hasVulnerabilityAlertsEnabled
                    homepageUrl
                    id
                    isBlankIssuesEnabled
                    isEmpty
                    isInOrganization
                    isSecurityPolicyEnabled
                    mergeCommitAllowed
                    mergeCommitTitle
                    mirrorUrl
                    name
                    nameWithOwner
                    openGraphImageUrl
                    pushedAt
                    securityPolicyUrl
                    shortDescriptionHTML
                    sshUrl
                    stargazerCount
                    updatedAt
                    url
                    viewerCanCreateProjects
                    viewerCanUpdateTopics
                    viewerPermission
                    viewerSubscription
                  }
                  repositoryDiscussions(first: $User__repositoryDiscussions__first) {
                    totalCount
                  }
                  savedReplies(first: $User__savedReplies__first) {
                    totalCount
                  }
                  sponsors(first: $User__sponsors__first) {
                    totalCount
                  }
                  sponsorshipForViewerAsSponsor {
                    isOneTimePayment
                  }
                  sponsorshipNewsletters(first: $User__sponsorshipNewsletters__first) {
                    totalCount
                  }
                  sponsorshipsAsMaintainer(first: $User__sponsorshipsAsMaintainer__first) {
                    totalRecurringMonthlyPriceInCents
                  }
                  starredRepositories(first: $User__starredRepositories__first) {
                    isOverLimit
                    totalCount
                  }
                  topRepositories(first: $User__topRepositories__first, orderBy: $User__topRepositories__orderBy) {
                    totalDiskUsage
                  }
                  anyPinnableItems
                  avatarUrl
                  canReceiveOrganizationEmailsWhenNotificationsRestricted(login: $User__canReceiveOrganizationEmailsWhenNotificationsRestricted__login)
                  companyHTML
                  email
                  isBountyHunter
                  isHireable
                  isSiteAdmin
                  isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
                  location
                  name
                  projectsResourcePath
                  projectsUrl
                  pronouns
                  totalSponsorshipAmountAsSponsorInCents
                  url
                  userViewType
                  viewerCanChangePinnedItems
                  viewerCanCreateProjects
                  viewerCanFollow
                  viewerCanSponsor
                  viewerIsFollowing
                }
                createdAt
                emoji
                emojiHTML
                expiresAt
                message
              }
              bio
              companyHTML
              createdAt
              estimatedNextSponsorsPayoutInCents
              id
              isCampusExpert
              isEmployee
              isHireable
              isSponsoredBy(accountLogin: $User__isSponsoredBy__accountLogin)
              isViewer
              location
              login
              resourcePath
              totalSponsorshipAmountAsSponsorInCents
              url
              viewerCanChangePinnedItems
              viewerCanSponsor
              viewerIsFollowing
              viewerIsSponsoring
              websiteUrl
            }
            createdAt
            id
          }
        }
        pageInfo {
          endCursor
        }
        viewerHasReacted
      }
      authorAssociation
      authorCanPushToRepository
      bodyHTML
      createdAt
      databaseId
      fullDatabaseId
      id
      minimizedReason
      url
      viewerCanDelete
      viewerCanReact
      viewerCanUpdate
    }
  }
}
